{"version":3,"sources":["config/apiConfig.js","helpers/Converters.js","API/apiEducator.js","stateManagement/context.js","components/CardContainer.js","API/apiAuth.js","views/LoginView.js","components/MyNav.js","components/Footer.js","components/Chat.js","views/PatientProfile.js","views/ShowPatientsView.js","App.js","serviceWorker.js","index.js","assets/ithnain.png"],"names":["apiUrl","parseArray","arr","map","element","JSON","parse","parseObjectOfArrays","obj","parsed","objects","key","current","push","getEducatorIds","a","fetch","url","then","res","json","data","educators","forEach","educator","name","id","catch","err","console","log","getEducatorChats","i","getChats","chats","count","length","educatorId","error","item","e","getAllEducators","getEducatorData","appointments","parsedData","DataContext","React","createContext","DataProvider","props","saveData","filterAppointments","setState","loading","setEducatorId","state","setChats","showPatient","hidePatient","showAppointments","hideAppointments","patientName","output","app","appointmentDate","date","split","Provider","value","this","shouldShowPatient","shouldShowAppointments","children","Component","Consumer","CardContainer","Card","style","width","flexDirection","direction","backgroundColor","padding","marginBottom","marginB","marginTop","marginT","borderRadius","login","username","password","text","sha256","encryptedPassword","axios","post","getMessages","get","timeout","result","Login","handleChang","target","onSubmit","context","history","Container","fluid","display","justifyContent","alignItems","height","Row","Col","sm","lg","src","logo","Form","Group","controlId","Label","Control","type","placeholder","onChange","Spinner","alignSelf","animation","Button","variant","onClick","contextType","MyNav","useContext","Navbar","bg","collapseOnSelect","expand","Brand","alt","className","Toggle","aria-controls","Collapse","Object","keys","Nav","Link","color","to","Footer","imgTypes","fileTypes","audioTypes","Chat","messages","messagesEnd","createRef","scrollToBottom","scrollIntoView","behavior","chatId","parsedMessages","formatMessages","formatedMessages","message","parseInt","user","_id","media","fileNameArr","fileExtension","isImg","includes","isFile","isAudio","image","file","replace","audio","createdOn","formattedMessage","Message","previousState","append","dateObject","Date","getHours","getMinutes","getMonth","getDate","container","colors","styles","senderBubble","senderContainer","receiverBubble","receiverContainer","bubble","href","getTimeStamp","paddingLeft","paddingRight","marginLeft","marginRight","maxHeight","overflowY","isTyping","is_typing","hasInputField","showSenderName","bubblesCentered","chatBubble","ChatBubble","bind","float","clear","ref","el","PatientProfile","chat","medicalProfile","years","age","weight","hba1c","medications","notes","disease","sex","whoIsPatient","surgery","otherDiseases","haveTakenDiet","Tab","Pane","eventKey","fontSize","overflowX","as","column","ShowPatientsView","activeList","activeChat","setActiveList","closeWindows","activeAppointment","goBack","paths","appointmentsInDay","fontWeight","textAlign","Table","striped","bordered","hover","appointmentId","time","hours","minutes","displayTime","ListGroup","Item","setActiveChat","patientsStyle","appointmentStyle","circle","renderListHeader","renderAppointmentsList","renderPatientsList","Content","renderCircle","renderAppointments","renderChat","renderDesktop","borderWidth","borderStyle","borderColor","position","right","top","boxShadow","App","exact","path","component","LoginView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3343aec0.chunk.js","sourcesContent":["// let apiUrl = 'https://api.ithnain.com'\r\nlet apiUrl= 'http://ec2-157-175-56-64.me-south-1.compute.amazonaws.com:3002'\r\n// let apiUrl = 'http://cors-anywhere.herokuapp.com/https://ithnain-test-backend.herokuapp.com'\r\n// let apiUrl= 'http://192.168.8.106:3000'\r\n// const expressPort = 3000\r\n// const apiUrls = {\r\n//   production: 'Production URL',\r\n//   development: `http://localhost:${expressPort}`\r\n// }\r\n\r\n// if (window.location.hostname === 'localhost') {\r\n//   apiUrl = apiUrls.development\r\n// } else {\r\n//   apiUrl = apiUrls.production\r\n// }\r\n\r\nexport default apiUrl","export function parseArray(arr){\r\n    return arr.map((element) => { return JSON.parse(element) })\r\n}\r\n\r\nexport function parseObjectOfArrays(obj){\r\n    let parsed=[]\r\n    let objects={}\r\n    for(var key in obj){\r\n        var current=obj[key]\r\n        objects[key]= parseArray(current)\r\n        parsed.push(parseArray(current))\r\n    }\r\n    return objects\r\n}","import url from '../config/apiConfig'\r\nimport { parseObjectOfArrays } from '../helpers/Converters'\r\n\r\nexport const getEducatorIds = async () => {\r\n    return await fetch(`${url}/educator?get=all`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            let educators = {}\r\n            data.forEach((educator) => {\r\n                let { name, id } = JSON.parse(educator)\r\n                educators[id] = { name, id }\r\n            })\r\n            return educators;\r\n        })\r\n        .catch(err => console.log('error getting ids: ', err)\r\n        )\r\n}\r\n\r\nexport const getEducatorChats = async () => {\r\n    const educators = await getEducatorIds();\r\n\r\n    for (var i in educators) {\r\n        let chats = await getChats(educators[i].id)\r\n        if (chats) {\r\n            educators[i].chats = chats\r\n            educators[i].count = chats.length\r\n        }\r\n    }\r\n    return educators;\r\n}\r\n\r\nexport const getChats = async (educatorId) => {\r\n\r\n    return await fetch(`${url}/chat?educatorId=${educatorId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) {\r\n                return;\r\n            }\r\n            let chats = data.map((item) => JSON.parse(item))\r\n            return chats\r\n\r\n        }).catch(e => console.log(e))\r\n}\r\n\r\nexport const getAllEducators = async () => {\r\n    const educators = await getEducatorIds();\r\n    \r\n    for (var i in educators) {\r\n        let { chats, appointments } = await getEducatorData(educators[i].id)\r\n        if (chats) {\r\n            educators[i].chats = chats\r\n            educators[i].count = chats.length\r\n        }\r\n        if(appointments){\r\n            educators[i].appointments= appointments\r\n        }\r\n    }\r\n    console.log(educators);\r\n\r\n    return educators;\r\n}\r\n\r\n\r\nexport const getEducatorData = async (educatorId) => {\r\n\r\n\r\n    const get = 'chats,appointments,educator,all';\r\n    return await fetch(`${url}/educator?id=${educatorId}&get=${get}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            delete data.educator\r\n            let parsedData = parseObjectOfArrays(data);\r\n            const { appointments, chats } = parsedData;\r\n            return { chats, appointments };\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { getEducatorChats, getAllEducators } from '../API/apiEducator'\r\n\r\nconst DataContext = React.createContext();\r\nclass DataProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      educatorId: 'e0d57df1-e8ae-4ca5-a076-93edb11deaa1',\r\n      loading: false,\r\n      showPatient: true,\r\n      showAppointments: true,\r\n      appointments: {},\r\n      educators: {},\r\n      chats: [\r\n        { id: '1234', patientName: 'w' }\r\n      ]\r\n    };\r\n  }\r\n\r\n\r\n  saveData = (educatorId, appointments, chats) => {\r\n    appointments = this.filterAppointments(appointments)\r\n    this.setState({ educatorId, appointments, chats })\r\n    if (educatorId == '8bd3c7e1-c6ec-48bf-8ac8-80bf1f013eef')\r\n      this.getEducatorData();\r\n\r\n  }\r\n\r\n  filterAppointments(appointments) {\r\n\r\n    if (appointments) {\r\n      let output = {}\r\n      appointments.forEach(app => {\r\n        if (typeof app == 'string') {\r\n          app = JSON.parse(app)\r\n        }\r\n        var appointmentDate = app.date.split('T')[0]\r\n        //if there is no array with this Date key, make one and add to it the appointment\r\n        if (!output[appointmentDate]) {\r\n          output[appointmentDate] = [app]\r\n        }\r\n        else {\r\n          //if it already exists, push to it the appointment\r\n          output[appointmentDate].push(app)\r\n        }\r\n      })\r\n\r\n      return output\r\n    }\r\n    return appointments\r\n  }\r\n\r\n\r\n  getEducatorChats = async () => {\r\n    this.setState({ loading: true })\r\n    let educators = await getEducatorChats();\r\n    if (educators) {\r\n      this.setState({ educators, loading: false })\r\n      return educators\r\n    }\r\n    else {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  getEducatorData = async () => {\r\n    this.setState({ loading: true })\r\n    let educators = await getAllEducators()\r\n    if (educators) {\r\n      this.setState({ educators, loading: false })\r\n      return educators\r\n    }\r\n    else {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  setEducatorId = educatorId => {\r\n    let appointments = this.filterAppointments(this.state.educators[educatorId].appointments)\r\n\r\n    this.setState({\r\n      educatorId,\r\n      chats: this.state.educators[educatorId].chats,\r\n      appointments\r\n    })\r\n\r\n  }\r\n  setChats = chats => this.setState({ chats })\r\n  showPatient = () => this.setState({showPatient: true})\r\n  hidePatient = () => this.setState({showPatient: false})\r\n  showAppointments = () => this.setState({showAppointments: true})\r\n  hideAppointments = () => this.setState({showAppointments: false })\r\n\r\n  render() {\r\n\r\n    return (\r\n      <DataContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          saveData: this.saveData,\r\n          getEducatorChats: this.getEducatorChats,\r\n          setEducatorId: this.setEducatorId,\r\n          setChats: this.setChats,\r\n          showPatient: this.showPatient,\r\n          hidePatient: this.hidePatient,\r\n          showAppointments: this.showAppointments,\r\n          hideAppointments: this.hideAppointments,\r\n          shouldShowPatient: this.state.showPatient,\r\n          shouldShowAppointments: this.state.showAppointments,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </DataContext.Provider>\r\n    );\r\n  }\r\n}\r\nconst DataConsumer = DataContext.Consumer;\r\n\r\nexport { DataProvider, DataConsumer, DataContext };\r\n\r\n","import React, { Component } from \"react\";\r\nimport {Card,} from 'react-bootstrap'\r\n\r\nclass CardContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Card  style={{ width: this.props.width, \r\n       \r\n    //   padding: \"2%\",\r\n     flexDirection: this.props.direction,\r\n      backgroundColor: \"rgba(247,247,247,1)\",\r\n      padding: this.props.padding,\r\n      marginBottom: this.props.marginB,\r\n      marginTop: this.props.marginT,\r\n      borderRadius: 25\r\n    //   boxShadow: '1px 3px 5px rgba(255,255,255,0.9)' \r\n      }}>\r\n            {this.props.children}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardContainer;\r\n","import axios from \"axios\"\r\nimport apiUrl from '../config/apiConfig'\r\nimport { sha256 } from 'js-sha256';\r\n\r\nconst encrypt = (text) => {\r\n    return sha256(text);\r\n}\r\n\r\nexport const login = async ({ username, password }) => {\r\n    let encryptedPassword = await encrypt(password);\r\n    \r\n    const data = {\r\n        id: username,\r\n        password: encryptedPassword\r\n    }\r\n    return axios.post(`${apiUrl}/login`, data)\r\n}\r\n\r\nexport const getMessages = async id => {\r\n    try {\r\n        let result = await axios\r\n            .get(`${apiUrl}/message?chatId=${id}`, { timeout: 10000 })\r\n        return result;\r\n    } catch (error) {\r\n        return error\r\n    }\r\n}","import React from \"react\";\r\nimport { Button, Form, Row, Col, Container, Spinner } from \"react-bootstrap\";\r\nimport CardContainer from \"../components/CardContainer\";\r\nimport logo from \"../assets/ithnain.png\";\r\nimport { login } from '../API/apiAuth'\r\nimport { DataContext } from '../stateManagement/context'\r\n\r\nclass Login extends React.Component {\r\n\r\n  static contextType = DataContext;\r\n\r\n\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    loading: false,\r\n  }\r\n\r\n  handleChang = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit = () => {    \r\n    this.setState({ loading: true })\r\n    login(this.state)\r\n      .then(res => {\r\n        this.setState({ loading: false })\r\n        this.context.saveData(res.data.educatorId, res.data.appointments, res.data.chats)\r\n        this.props.history.push(\"showpatients\")\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        this.setState({ loading: false })\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { username, password, loading} = this.state;\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100vh\",\r\n          backgroundColor: \"#0a122a\"\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col\r\n            sm={12}\r\n            lg={4}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <img src={logo} style={{ width: \"50%\", marginBottom: \"4%\" }} />\r\n          </Col>\r\n          <Col\r\n            sm={12}\r\n            lg={6}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <CardContainer width=\"80%\" padding={30}>\r\n              <Form style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter username\"\r\n                    value={username}\r\n                    name={\"username\"}\r\n                    onChange={(e) => this.handleChang(e)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    name={\"password\"}\r\n                    onChange={(e) => this.handleChang(e)}\r\n                  />\r\n                </Form.Group>\r\n                {loading? <Spinner style={{alignSelf:'center', marginBottom: 10}} animation=\"border\" /> : null}\r\n                <Button variant=\"primary\" onClick={this.onSubmit}>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </CardContainer>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component, useContext } from \"react\";\r\nimport logo from '../assets/ithnain.png'\r\nimport { Navbar, Spinner, Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {DataContext} from '../stateManagement/context'\r\n\r\nconst MyNav = (props) => {\r\n\r\n  const {educators, setEducatorId, loading}= useContext(DataContext)\r\n\r\n  return (\r\n    <Navbar bg=\"secondary\" variant=\"dark\" collapseOnSelect expand=\"lg\">\r\n      <Navbar.Brand >\r\n        <img\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"80\"\r\n          height=\"40\"\r\n          className=\"d-inline-block align-top\"\r\n        />{\" \"}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        {Object.keys(educators).length ?\r\n          Object.keys(educators).map((i) => (\r\n            <Nav.Link key={educators[i].id} ><Link style={{ color: \"#FFF\" }} onClick={()=>setEducatorId(educators[i].id)} >{educators[i].name}</Link> </Nav.Link>\r\n          ))\r\n          : loading? \r\n          <Spinner animation=\"border\" />\r\n          : <Nav className=\"mr-auto\">\r\n            {/* <Nav.Link ><Link style={{ color: \"#FFF\" }} to=\"/\">Home</Link> </Nav.Link> */}\r\n            <Nav.Link ><Link style={{ color: \"#FFF\" }} to=\"/\">Logout</Link></Nav.Link>\r\n          </Nav>\r\n        }\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n\r\n}\r\n\r\nexport default MyNav;\r\n","import React from \"react\";\r\nimport logo from \"../assets/ithnain.png\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar\r\n      bg=\"secondary\"\r\n      variant=\"dark\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        \r\n      }}\r\n    >\r\n      <img\r\n        alt=\"\"\r\n        src={logo}\r\n        width=\"100\"\r\n        height=\"50\"\r\n        className=\"d-inline-block align-top\"\r\n      />\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { ChatFeed, Message, ChatBubble } from 'react-chat-ui'\r\nimport { Container, Spinner } from 'react-bootstrap'\r\nimport { getMessages } from '../API/apiAuth'\r\n\r\nconst imgTypes = ['png', 'jpg', 'jpeg', 'gif'];\r\nconst fileTypes = ['pdf', 'doc', 'docx'];\r\nconst audioTypes = ['mp3', '3gp', 'caf', 'wav', 'wave', 'm4a'];\r\n\r\nclass Chat extends React.Component {\r\n\r\n    state = {\r\n        messages: [],\r\n    };\r\n\r\n    messagesEnd = React.createRef();\r\n    async componentDidMount() {\r\n\r\n        let chatId = '1234'\r\n        this.setState({ loading: true })\r\n        await getMessages(this.props.chatId)\r\n            .then(({ data }) => {\r\n                if (data) {\r\n                    let parsedMessages = data.map((element) => { return JSON.parse(element) })\r\n                    // return parsedMessages\r\n                    let messages = this.formatMessages(parsedMessages)\r\n                    this.setState({ messages, loading: false })\r\n                    // this.scrollToBottom()\r\n                }\r\n                else {\r\n                    this.setState({ loading: false })\r\n                    return []\r\n                }\r\n            }).catch(err => {\r\n                this.setState({ loading: false })\r\n                console.log(\"ERROR GETTING MESSAGES\", err)\r\n            })\r\n\r\n    }\r\n\r\n    formatMessages(messages = []) {\r\n        let formatedMessages = []\r\n        for (var i in messages) {\r\n            let message = messages[i];\r\n            let id = parseInt(message.user._id) - 1;\r\n            if (message.media) {\r\n                var fileNameArr = message.media.split('.');\r\n                var fileExtension = fileNameArr[fileNameArr.length - 1];\r\n                var isImg = imgTypes.includes(fileExtension);\r\n                var isFile = fileTypes.includes(fileExtension);\r\n                var isAudio = audioTypes.includes(fileExtension);\r\n                if (isImg) {\r\n                    message.message = { image: message.media };\r\n                    delete message.media;\r\n                } else if (isFile) {\r\n                    message.message = { text: message.text, file: message.media };\r\n                    delete message.media;\r\n                } else if (isAudio) {\r\n                    message.media = message.media.replace('vnd.wave', 'wav');\r\n                    message.message = { audio: message.media };\r\n                    delete message.media;\r\n                }\r\n                else {\r\n                    message.message = { text: '', }\r\n                }\r\n            } else if (message.text) {\r\n                message.message = { text: message.text }\r\n            }\r\n            else {\r\n                message.message = { text: '', }\r\n            }\r\n            message.message.createdOn = message.createdOn\r\n            let formattedMessage = new Message({ id, message: message.message })\r\n\r\n            formatedMessages.push(formattedMessage)\r\n        }\r\n        return formatedMessages;\r\n    }\r\n\r\n\r\n    onSend(messages = []) {\r\n        this.setState((previousState) => ({\r\n            messages: previousState.messages.append(messages),\r\n        }));\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n    getTimeStamp(dateObject) {\r\n        let date = new Date(dateObject)\r\n        return `${date.getHours()}:${date.getMinutes()} - ${date.getMonth() + 1}/${date.getDate()}`\r\n    }\r\n    bubble(props) {\r\n        let { message } = props;\r\n        let container, colors;\r\n        if (message.id == 0) {\r\n            colors = styles.senderBubble;\r\n            container = styles.senderContainer;\r\n        } else {\r\n            colors = styles.receiverBubble;\r\n            container = styles.receiverContainer;\r\n        }\r\n        if (!message.message)\r\n            return null;\r\n\r\n        return (\r\n            // <ChatBubble message={new Message({id: 1, message:'hi'})} />\r\n            <div style={container}>\r\n                <div style={{ ...styles.bubble, ...colors }}>\r\n                    {\r\n                        message.message.image ? (\r\n                            <img src={message.message.image} />\r\n                        ) : message.message.file ? (\r\n                            <a href={message.message.file} target=\"_blank\">{message.message.text}</a>\r\n                        ) : message.message.text ? (\r\n                            message.message.text\r\n                            // null\r\n                        ) : null}\r\n                    <br />\r\n                    {this.getTimeStamp(message.message.createdOn)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        const { loading, messages } = this.state;\r\n\r\n        return (\r\n            <div style={{ paddingLeft: 0, paddingRight: 0, marginLeft: 0, marginRight: 0, width: '100vh', maxHeight: '80vh', overflowY: 'auto' }}>\r\n                {loading ?\r\n                    <Spinner animation=\"border\" />\r\n                    :\r\n                    !messages.length ?\r\n                        <div>المحادثة فارغة </div>\r\n                        : null\r\n                }\r\n                <ChatFeed\r\n                    messages={messages} // Boolean: list of message objects\r\n                    isTyping={this.state.is_typing} // Boolean: is the recipient typing\r\n                    hasInputField={false} // Boolean: use our input, or use your own\r\n                    showSenderName // show the name of the user who sent the message\r\n                    bubblesCentered={false} //Boolean should the bubbles be centered in the feed?\r\n                    chatBubble={ChatBubble}\r\n                    chatBubble={this.bubble.bind(this)}\r\n                />\r\n                <div style={{ float: \"left\", clear: \"both\" }}\r\n                    ref={(el) => { this.messagesEnd = el; }} />\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Chat\r\n\r\nconst styles = {\r\n    bubble: {\r\n        borderRadius: 15,\r\n        padding: 20,\r\n        backgroundColor: \"#3680E5\",\r\n        display: \"inline-block\",\r\n        color: \"white\"\r\n    },\r\n    senderBubble: {\r\n        backgroundColor: \"#3680E5\",\r\n        color: \"white\",\r\n    },\r\n    receiverBubble: {\r\n        backgroundColor: \"#D8D8D8\",\r\n        color: \"black\",\r\n    },\r\n    senderContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        marginBottom: 5,\r\n    },\r\n    receiverContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        marginBottom: 5,\r\n    },\r\n    // timestamp: {\r\n    //     margin: 0,\r\n    //     color: '#ccc',\r\n    //     fontSize: 11\r\n    // }\r\n};\r\n","import React, {useContext} from 'react'\r\nimport {Tab, Col, Row, Form} from 'react-bootstrap'\r\nimport { DataContext } from \"../stateManagement/context\";\r\n\r\n\r\nconst PatientProfile = (props) => {\r\n    const context= useContext(DataContext)\r\n    let { chats, hidePatient } = context;\r\n    \r\n    if (!chats) {\r\n      return null\r\n    }\r\n    \r\n    return chats.map(chat => {\r\n      if (!chat.medicalProfile) {\r\n        return null\r\n      }\r\n      let { years,\r\n        age,\r\n        weight,\r\n        height,\r\n        hba1c,\r\n        medications,\r\n        patientName,\r\n        notes,\r\n        disease,\r\n        sex,\r\n        whoIsPatient,\r\n        surgery,\r\n        otherDiseases,\r\n        haveTakenDiet,\r\n      } = chat.medicalProfile\r\n      console.log('rendering chats');\r\n      \r\n      return (\r\n        <Tab.Pane key={chat.id} eventKey={chat.id}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"column\"\r\n            }}\r\n          >\r\n\r\n            <a style={{ color: '#3581b8', fontSize: 26 }} onClick={() => hidePatient()}>فتح المحادثة</a>\r\n\r\n            <h3>{chat.id}</h3>\r\n\r\n            <Form style={{ width: '100vh', maxHeight: '80vh', overflowY: 'auto', overflowX: 'hidden' }}>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label column sm=\"10\">\r\n                    disease\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={disease} />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label column sm=\"10\">\r\n                    years\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={years} />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label column sm=\"10\">\r\n                    Hba1C\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={hba1c} />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label column sm=\"10\">\r\n                    age\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={age} />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label column sm=\"10\">\r\n                    sex\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={sex} />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label column sm=\"10\">\r\n                    Patient Type\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={whoIsPatient} />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label column sm=\"10\">\r\n                    medications\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={medications} />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label column sm=\"10\">\r\n                    otherDiseases\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={otherDiseases} />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label column sm=\"10\">\r\n                    Weight\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={weight} />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label column sm=\"10\">\r\n                    Height\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={height} />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label column sm=\"10\">\r\n                    Diet Taken\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={haveTakenDiet} />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column sm=\"10\">\r\n                    Past Surgeries\r\n              </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" value={surgery} />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group as={Row}>\r\n                <Form.Label column sm=\"10\">\r\n                  Notes\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"textarea\" value={notes} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form>\r\n\r\n          </div>\r\n        </Tab.Pane>\r\n      );\r\n    });\r\n}\r\n\r\nexport default PatientProfile","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  ListGroup,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Tab,\r\n  Nav,\r\n  Table,\r\n  Accordion,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport CardContainer from \"../components/CardContainer\";\r\nimport logo from \"../assets/ithnain.png\";\r\nimport { login } from \"../API/apiAuth\";\r\nimport { DataContext } from \"../stateManagement/context\";\r\nimport { parseArray } from \"../helpers/Converters\";\r\n\r\nimport MyNav from \"../components/MyNav\";\r\nimport Footer from \"../components/Footer\";\r\nimport Chat from '../components/Chat';\r\nimport PatientProfile from './PatientProfile';\r\n\r\nclass ShowPatientsView extends React.Component {\r\n  static contextType = DataContext;\r\n\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    activeList: '',\r\n    activeChat: '',\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (this.context.educatorId == \"\") {\r\n      this.props.history.goBack();\r\n      // console.log(this.props)\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let { chats, educators } = this.context\r\n    if (!this.context.chats[0].id) {\r\n      chats = parseArray(this.context.chats);\r\n      this.context.setChats(chats)\r\n    }\r\n\r\n    let paths = []\r\n    for (var i in educators) {\r\n      let educator = educators[i]\r\n      paths.push({})\r\n    }\r\n  }\r\n\r\n  renderChat() {\r\n    let { chats, showPatient } = this.context;\r\n    let { activeChat } = this.state;\r\n    console.log('rendering chat', typeof chats, '\\nactivated', activeChat);\r\n\r\n    if (!chats) {\r\n      return null\r\n    }\r\n    return chats.map(chat => {\r\n      return (\r\n        <Tab.Pane key={chat.id} eventKey={chat.id}>\r\n          <div>\r\n            <a style={{ color: '#3581b8' }} onClick={() => showPatient()}>مشاهدة البروفايل</a>\r\n          </div>\r\n          {activeChat == chat.id ?\r\n            <Chat chatId={chat.id} />\r\n            : null}\r\n        </Tab.Pane>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderAppointments() {\r\n    const { appointments } = this.context;\r\n    // let appointments = {\r\n    //   '2020-11-28':\r\n    //     [{ date: '2020-11-28T17:00:00.000Z', name: 'W3', time: '20:00:00' },\r\n    //     { date: '2020-11-28T17:00:00.000Z', name: 'W1', time: '08:00:00' }],\r\n    //   '2020-11-29': [{ date: '2020-11-29T17:00:00.000Z', name: 'W2', time: '16:00:00' }]\r\n    // }\r\n    if (!appointments || (appointments && !Object.keys(appointments).length)) {\r\n      return null;\r\n    }\r\n    console.log('rendering appointments');\r\n\r\n    return Object.keys(appointments).map(appointmentDate => {\r\n      let appointmentsInDay = appointments[appointmentDate]\r\n\r\n      return (\r\n        <Tab.Pane key={appointmentDate} eventKey={appointmentDate}>\r\n          <div style={{ width: '100vh', maxHeight: '80vh', }}>\r\n            <div style={{ fontWeight: '600', marginBottom: 10, textAlign: 'center', fontSize: 20 }}>{appointmentDate}</div>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>Time</th>\r\n                  <th>Patient Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {appointmentsInDay.map(({ appointmentId, time, name }) => {\r\n                  let hours = parseInt(time.split(':')[0])\r\n                  let minutes = time.split(':')[1]\r\n                  let displayTime = hours > 12 ? `${hours - 12}:${minutes}` : `${hours}:${minutes}`\r\n                  return (\r\n                    <tr key={appointmentId}>\r\n                      <td>{displayTime}</td>\r\n                      <td>{name}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Tab.Pane>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderAppointmentsList() {\r\n    const { appointments, showAppointments } = this.context;\r\n    // let appointments = {\r\n    //   '2020-11-28':\r\n    //     [{ date: '2020-11-28T17:00:00.000Z', name: 'W3', time: '20:00:00' },\r\n    //     { date: '2020-11-28T17:00:00.000Z', name: 'W1', time: '08:00:00' }],\r\n    //   '2020-11-29': [{ date: '2020-11-29T17:00:00.000Z', name: 'W2', time: '16:00:00' }]\r\n    // }\r\n    console.log('appointments render:', appointments);\r\n\r\n    if (!appointments || (appointments && !Object.keys(appointments).length)) {\r\n      return null\r\n    }\r\n\r\n    return Object.keys(appointments).map(appointmentDate => {\r\n      return (\r\n        <ListGroup.Item key={appointmentDate} eventKey={appointmentDate} onClick={()=>showAppointments()}>\r\n          {appointmentDate}\r\n        </ListGroup.Item>\r\n\r\n      );\r\n    });\r\n  }\r\n\r\n  setActiveChat(chatId) {\r\n    this.setState({\r\n      activeChat: chatId\r\n    })\r\n  }\r\n\r\n  renderPatientsList() {\r\n    const { chats } = this.context;\r\n    if (!chats) {\r\n      return null\r\n    }\r\n    return chats.map(chat => {\r\n      return (\r\n        <ListGroup.Item key={chat.id} eventKey={chat.id} onClick={() => this.setActiveChat(chat.id)}>\r\n          {chat.patientName}\r\n        </ListGroup.Item>\r\n\r\n      );\r\n    });\r\n  }\r\n\r\n  setActiveList = (type) => {\r\n    this.setState({\r\n      activeList: type,\r\n    })\r\n\r\n  }\r\n\r\n  closeWindows = () => {\r\n    this.setState({\r\n      activeChat: '',\r\n      activeAppointment: '',\r\n    })\r\n    this.context.hidePatient();\r\n    this.context.hideAppointments();\r\n  }\r\n\r\n  renderListHeader() {\r\n    let { activeList } = this.state;\r\n    let patientsStyle, appointmentStyle;\r\n    if (activeList == 'appointments') {\r\n      patientsStyle = 'dark'\r\n      appointmentStyle = 'primary'\r\n    } else {\r\n      patientsStyle = 'primary'\r\n      appointmentStyle = 'dark'\r\n    }\r\n    return (\r\n      <div style={{\r\n        display: 'block',\r\n        backgroundColor: 'white',\r\n        textAlign: 'center',\r\n        padding: 10\r\n      }}>\r\n        <Button variant={patientsStyle} onClick={() => this.setActiveList('patients')} style={{ marginRight: 5 }}>المحادثات</Button>\r\n        <Button variant={appointmentStyle} onClick={() => this.setActiveList('appointments')} >المواعيد</Button>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderCircle() {\r\n    return (\r\n      <div style={styles.circle} onClick={() => this.closeWindows()}>\r\n        X\r\n      </div>\r\n    )\r\n  }\r\n  renderDesktop() {\r\n    let { activeList, } = this.state\r\n    let { shouldShowPatient, shouldShowAppointments } = this.context\r\n    console.log(\"shouldShowAppointments\", activeList == 'appointments' && shouldShowAppointments);\r\n    console.log('activeList', activeList);\r\n    \r\n    return (\r\n      <>\r\n        <MyNav />\r\n        <Container\r\n          fluid\r\n          style={styles.container}>\r\n          <CardContainer width=\"80%\" direction=\"row\" padding={10} marginT={40} marginB={40}>\r\n            <Tab.Container id=\"left-tabs-example\" >\r\n              <div className=\"left-col\">\r\n                {this.renderListHeader()}\r\n                {activeList == 'appointments' ?\r\n                  <ListGroup >{this.renderAppointmentsList()}</ListGroup>\r\n                  : <ListGroup >{this.renderPatientsList()}</ListGroup>\r\n                }\r\n              </div>\r\n              <div className=\"right-col\">\r\n\r\n\r\n                <Tab.Content>\r\n                  {this.renderCircle()}\r\n                  {activeList == 'appointments' && shouldShowAppointments ?\r\n                    this.renderAppointments()\r\n                    : shouldShowPatient ?\r\n                      <PatientProfile />\r\n                      : this.renderChat()\r\n                  }\r\n                </Tab.Content>\r\n              </div>\r\n            </Tab.Container>\r\n          </CardContainer>\r\n        </Container>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n  renderTablet() {\r\n\r\n  }\r\n  renderPhone() {\r\n\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        {this.renderDesktop()}\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst Desktop = ({ children }) => {\r\n  const isDesktop = useMediaQuery({ minWidth: 992 })\r\n  return isDesktop ? children : null\r\n}\r\nconst Tablet = ({ children }) => {\r\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 })\r\n  return isTablet ? children : null\r\n}\r\nconst Mobile = ({ children }) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 767 })\r\n  return isMobile ? children : null\r\n}\r\nconst Default = ({ children }) => {\r\n  const isNotMobile = useMediaQuery({ minWidth: 768 })\r\n  return isNotMobile ? children : null\r\n}\r\n\r\nexport default ShowPatientsView;\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#0a122a\"\r\n  },\r\n  circle: {\r\n    width: 30,\r\n    height: 30,\r\n    borderWidth: 0,\r\n    textAlign: 'center',\r\n    borderStyle: 'solid',\r\n    borderColor: '#000',\r\n    color: '#000',\r\n    borderRadius: 80,\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    right: 20,\r\n    top: 20,\r\n    boxShadow: \"0px 2px 5px 4px rgba(0,0,0,0.1)\"\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport './scss/app.scss'\r\nimport {DataProvider} from './stateManagement/context'\r\nimport {BrowserRouter as Router, Route, Redirect, Link, Switch} from 'react-router-dom'\r\nimport LoginView from './views/LoginView'\r\nimport ShowPatientsView from './views/ShowPatientsView'\r\nimport MyNav from './components/MyNav'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction App() {\r\n  return (\r\n    <DataProvider>\r\n      <Router>\r\n       \r\n\r\n     \r\n      \r\n        <Switch>\r\n        <Route exact path=\"/\" component={LoginView} />\r\n        {/* <Redirect from=\"/educator-webapp\" exact to=\"/\" /> */}\r\n        {/* <Route exact path=\"/\" component={ShowPatientsView} /> */}\r\n        <Route exact path=\"/showpatients\" component={ShowPatientsView} />\r\n        </Switch>\r\n      </Router>\r\n   \r\n    </DataProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/ithnain.287167eb.png\";"],"sourceRoot":""}