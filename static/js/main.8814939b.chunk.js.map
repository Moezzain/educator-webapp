{"version":3,"sources":["config/apiConfig.js","helpers/Converters.js","API/apiEducator.js","stateManagement/context.js","components/CardContainer.js","API/apiAuth.js","views/LoginView.js","components/MyNav.js","components/Footer.js","components/Chat.js","views/PatientProfile.js","views/PatientEducators.js","views/ShowPatientsView.js","App.js","serviceWorker.js","index.js","assets/ithnain.png"],"names":["apiUrl","parseArray","arr","map","element","JSON","parse","parseObjectOfArrays","obj","parsed","objects","key","current","push","getEducatorIds","a","fetch","url","then","res","json","data","educators","forEach","educator","name","id","catch","err","console","log","getEducatorChats","i","getChats","chats","count","length","educatorId","error","item","e","getAllEducatorsAndPatients","patients","getEducatorData","appointments","chat","patient","patientId","parsedData","DataContext","React","createContext","DataProvider","props","saveData","filterAppointments","setState","loading","setEducatorId","state","setChats","showPatient","patientsVisible","hidePatient","showAppointments","appointmentsVisible","hideAppointments","showEducators","educatorsVisible","hideEducators","setActiveChat","chatId","activeChat","patientName","output","app","appointmentDate","date","split","Provider","value","this","children","Component","Consumer","CardContainer","Card","style","width","flexDirection","direction","backgroundColor","padding","marginBottom","marginB","marginTop","marginT","borderRadius","login","username","password","text","sha256","encryptedPassword","axios","post","getMessages","get","timeout","result","Login","handleChang","target","onSubmit","context","history","Container","fluid","display","justifyContent","alignItems","height","Row","Col","sm","lg","src","logo","Form","Group","controlId","Label","Control","type","placeholder","onChange","Spinner","alignSelf","animation","Button","variant","onClick","contextType","MyNav","useContext","Navbar","bg","collapseOnSelect","expand","Brand","alt","className","Toggle","aria-controls","Collapse","Object","keys","Nav","Link","color","to","Footer","imgTypes","fileTypes","audioTypes","Chat","messages","messagesEnd","createRef","scrollToBottom","scrollIntoView","behavior","parsedMessages","formatMessages","formatedMessages","message","parseInt","user","_id","media","fileNameArr","fileExtension","isImg","includes","isFile","isAudio","image","file","replace","audio","createdOn","formattedMessage","Message","previousState","append","dateObject","Date","getHours","getMinutes","getMonth","getDate","container","colors","styles","senderBubble","senderContainer","receiverBubble","receiverContainer","bubble","href","getTimeStamp","paddingLeft","paddingRight","marginLeft","marginRight","maxHeight","overflowY","isTyping","is_typing","hasInputField","showSenderName","bubblesCentered","chatBubble","ChatBubble","bind","float","clear","ref","el","defaultProfile","years","age","weight","hba1c","medications","notes","disease","sex","whoIsPatient","surgery","otherDiseases","haveTakenDiet","PatientProfile","medicalProfile","Tab","Pane","eventKey","overflowX","as","column","defaultValue","rows","PatientEducators","find","c","ListGroup","reverse","Item","active","ShowPatientsView","activeList","lang","ar","profile","setActiveList","closeWindows","activeAppointment","goBack","paths","appointmentsInDay","fontWeight","textAlign","fontSize","Table","striped","bordered","hover","appointmentId","time","hours","minutes","displayTime","patientsStyle","appointmentStyle","circle","Tabs","defaultActiveKey","mountOnEnter","title","renderChat","renderListHeader","renderAppointmentsList","renderPatientsList","Content","overflow","renderCircle","renderAppointments","renderUpperTabs","borderWidth","borderStyle","borderColor","position","right","top","boxShadow","App","exact","path","component","LoginView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.8814939b.chunk.js","sourcesContent":["let apiUrl = 'https://api.ithnain.com'\n// let apiUrl= 'http://ec2-157-175-56-64.me-south-1.compute.amazonaws.com:3002'\n// let apiUrl = 'http://cors-anywhere.herokuapp.com/https://ithnain-test-backend.herokuapp.com'\n// let apiUrl= 'http://192.168.8.106:3000'\n// const expressPort = 3000\n// const apiUrls = {\n//   production: 'Production URL',\n//   development: `http://localhost:${expressPort}`\n// }\n\n// if (window.location.hostname === 'localhost') {\n//   apiUrl = apiUrls.development\n// } else {\n//   apiUrl = apiUrls.production\n// }\n\nexport default apiUrl","export function parseArray(arr){\n    return arr.map((element) => { return JSON.parse(element) })\n}\n\nexport function parseObjectOfArrays(obj){\n    let parsed=[]\n    let objects={}\n    for(var key in obj){\n        var current=obj[key]\n        objects[key]= parseArray(current)\n        parsed.push(parseArray(current))\n    }\n    return objects\n}","import url from '../config/apiConfig'\nimport { parseObjectOfArrays } from '../helpers/Converters'\n\nexport const getEducatorIds = async () => {\n  return await fetch(`${url}/educator?get=all`)\n    .then(res => res.json())\n    .then(data => {\n      let educators = {}\n      data.forEach((educator) => {\n        let { name, id } = JSON.parse(educator)\n        educators[id] = { name, id }\n      })\n      return educators;\n    })\n    .catch(err => console.log('error getting ids: ', err)\n    )\n}\n\nexport const getEducatorChats = async () => {\n  const educators = await getEducatorIds();\n  let patientChats = []\n  for (var i in educators) {\n    let chats = await getChats(educators[i].id)\n    if (chats) {\n      educators[i].chats = chats\n      educators[i].count = chats.length\n    }\n  }\n  return educators;\n}\n\nexport const getChats = async (educatorId) => {\n\n  return await fetch(`${url}/chat?educatorId=${educatorId}`)\n    .then(res => res.json())\n    .then(data => {\n      if (data.error) {\n        return;\n      }\n      let chats = data.map((item) => JSON.parse(item))\n      return chats\n\n    }).catch(e => console.log(e))\n}\n\nexport const getAllEducatorsAndPatients = async () => {\n  const educators = await getEducatorIds();\n  let patients = {}\n  for (var i in educators) {\n    let educator = educators[i]\n    let { chats, appointments } = await getEducatorData(educator.id)\n    if (chats) {\n      educator.chats = chats\n      educator.count = chats.length\n      chats.forEach((chat) => {\n        let patient = patients[chat.patientId]\n        if (!patient) {\n          patients[chat.patientId] = chat\n          patient= patients[chat.patientId]\n        }\n        if (patient && patient.educators) {\n          patient.educators.push({id: educator.id, name: educator.name})\n        }\n        else {\n          patient.educators = [{id: educator.id, name: educator.name}]\n        }\n      })\n      console.log(\"patients\", patients);\n      // break;\n\n    }\n    if (appointments) {\n      educators[i].appointments = appointments\n    }\n  }\n\n  return {educators, patients};\n}\n\n\nexport const getEducatorData = async (educatorId) => {\n\n\n  const get = 'chats,appointments,educator,all';\n  return await fetch(`${url}/educator?id=${educatorId}&get=${get}`)\n    .then(res => res.json())\n    .then(data => {\n      delete data.educator\n      let parsedData = parseObjectOfArrays(data);\n      const { appointments, chats } = parsedData;\n      return { chats, appointments };\n    })\n    .catch(err => console.log(err))\n}\n","import React, { Component } from \"react\";\nimport { getEducatorChats, getAllEducatorsAndPatients } from '../API/apiEducator'\n\nconst DataContext = React.createContext();\nclass DataProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      educatorId: '',\n      activeChat: '',\n      loading: false,\n      patientsVisible: false,\n      appointmentsVisible: true,\n      educatorsVisible: false,\n      appointments: {},\n      educators: {},\n      patients: {},\n      chats: [\n        { id: '1234', patientName: 'w' }\n      ]\n    };\n  }\n\n\n  saveData = (educatorId, appointments, chats) => {\n    appointments = this.filterAppointments(appointments)\n    this.setState({ educatorId, appointments, chats })\n    if (educatorId == '55aabda5-8af2-4a39-b074-80a1852dcb1d')\n      this.getEducatorData();\n\n  }\n  // componentDidMount() {\n  //   this.getEducatorData();  \n  // }\n\n  filterAppointments(appointments) {\n\n    if (appointments) {\n      let output = {}\n      appointments.forEach(app => {\n        if (typeof app == 'string') {\n          app = JSON.parse(app)\n        }\n        var appointmentDate = app.date.split('T')[0]\n        //if there is no array with this Date key, make one and add to it the appointment\n        if (!output[appointmentDate]) {\n          output[appointmentDate] = [app]\n        }\n        else {\n          //if it already exists, push to it the appointment\n          output[appointmentDate].push(app)\n        }\n      })\n\n      return output\n    }\n    return appointments\n  }\n\n\n  getEducatorChats = async () => {\n    this.setState({ loading: true })\n    let educators = await getEducatorChats();\n    if (educators) {\n      this.setState({ educators, loading: false })\n      return educators\n    }\n    else {\n      this.setState({ loading: false })\n    }\n  }\n\n  getEducatorData = async () => {\n    this.setState({ loading: true })\n    let { educators, patients } = await getAllEducatorsAndPatients()\n    if (educators && patients) {\n      this.setState({ educators, patients, loading: false })\n      return educators\n    }\n    else if (educators) {\n      this.setState({ educators, loading: false })\n      return educators\n    }\n    else {\n      this.setState({ loading: false })\n    }\n  }\n\n  setEducatorId = educatorId => {\n    let appointments = this.filterAppointments(this.state.educators[educatorId].appointments)\n\n    this.setState({\n      educatorId,\n      chats: this.state.educators[educatorId].chats,\n      appointments\n    })\n\n  }\n  setChats = chats => this.setState({ chats })\n  showPatient = () => this.setState({ patientsVisible: true })\n  hidePatient = () => this.setState({ patientsVisible: false })\n  showAppointments = () => this.setState({ appointmentsVisible: true })\n  hideAppointments = () => this.setState({ appointmentsVisible: false })\n  showEducators = () => this.setState({ educatorsVisible: true, patientsVisible: false })\n  hideEducators = () => this.setState({ educatorsVisible: false, patientsVisible: true })\n  setActiveChat = chatId => this.setState({ activeChat: chatId })\n  render() {\n\n    return (\n      <DataContext.Provider\n        value={{\n          ...this.state,\n          saveData: this.saveData,\n          getEducatorChats: this.getEducatorChats,\n          setEducatorId: this.setEducatorId,\n          setChats: this.setChats,\n          showPatient: this.showPatient,\n          hidePatient: this.hidePatient,\n          showAppointments: this.showAppointments,\n          hideAppointments: this.hideAppointments,\n          showEducators: this.showEducators,\n          hideEducators: this.hideEducators,\n          setActiveChat: this.setActiveChat,\n        }}\n      >\n        {this.props.children}\n      </DataContext.Provider>\n    );\n  }\n}\nconst DataConsumer = DataContext.Consumer;\n\nexport { DataProvider, DataConsumer, DataContext };\n\n","import React, { Component } from \"react\";\nimport {Card,} from 'react-bootstrap'\n\nclass CardContainer extends Component {\n  render() {\n    return (\n      <Card  style={{ width: this.props.width, \n       \n    //   padding: \"2%\",\n     flexDirection: this.props.direction,\n      backgroundColor: \"rgba(247,247,247,1)\",\n      padding: this.props.padding,\n      marginBottom: this.props.marginB,\n      marginTop: this.props.marginT,\n      borderRadius: 25\n    //   boxShadow: '1px 3px 5px rgba(255,255,255,0.9)' \n      }}>\n            {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default CardContainer;\n","import axios from \"axios\"\nimport apiUrl from '../config/apiConfig'\nimport { sha256 } from 'js-sha256';\n\nconst encrypt = (text) => {\n    return sha256(text);\n}\n\nexport const login = async ({ username, password }) => {\n    let encryptedPassword = await encrypt(password);\n    \n    const data = {\n        id: username,\n        password: encryptedPassword\n    }\n    return axios.post(`${apiUrl}/login`, data)\n}\n\nexport const getMessages = async id => {\n    try {\n        let result = await axios\n            .get(`${apiUrl}/message?chatId=${id}`, { timeout: 10000 })\n        return result;\n    } catch (error) {\n        return error\n    }\n}","import React from \"react\";\nimport { Button, Form, Row, Col, Container, Spinner } from \"react-bootstrap\";\nimport CardContainer from \"../components/CardContainer\";\nimport logo from \"../assets/ithnain.png\";\nimport { login } from '../API/apiAuth'\nimport { DataContext } from '../stateManagement/context'\n\nclass Login extends React.Component {\n\n  static contextType = DataContext;\n\n\n  state = {\n    username: \"\",\n    password: \"\",\n    loading: false,\n  }\n\n  handleChang = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onSubmit = () => {    \n    this.setState({ loading: true })\n    login(this.state)\n      .then(res => {\n        this.setState({ loading: false })\n        this.context.saveData(res.data.educatorId, res.data.appointments, res.data.chats)\n        this.props.history.push(\"showpatients\")\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({ loading: false })\n      })\n  }\n\n\n  render() {\n    const { username, password, loading} = this.state;\n    return (\n      <Container\n        fluid\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n          backgroundColor: \"#0a122a\"\n        }}\n      >\n        <Row>\n          <Col\n            sm={12}\n            lg={4}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            <img src={logo} style={{ width: \"50%\", marginBottom: \"4%\" }} />\n          </Col>\n          <Col\n            sm={12}\n            lg={6}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            <CardContainer width=\"80%\" padding={30}>\n              <Form style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter username\"\n                    value={username}\n                    name={\"username\"}\n                    onChange={(e) => this.handleChang(e)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    name={\"password\"}\n                    onChange={(e) => this.handleChang(e)}\n                  />\n                </Form.Group>\n                {loading? <Spinner style={{alignSelf:'center', marginBottom: 10}} animation=\"border\" /> : null}\n                <Button variant=\"primary\" onClick={this.onSubmit}>\n                  Submit\n                </Button>\n              </Form>\n            </CardContainer>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component, useContext } from \"react\";\nimport logo from '../assets/ithnain.png'\nimport { Navbar, Spinner, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport {DataContext} from '../stateManagement/context'\n\nconst MyNav = (props) => {\n\n  const {educators, setEducatorId, loading}= useContext(DataContext)\n\n  return (\n    <Navbar bg=\"secondary\" variant=\"dark\" collapseOnSelect expand=\"lg\">\n      <Navbar.Brand >\n        <img\n          alt=\"\"\n          src={logo}\n          width=\"80\"\n          height=\"40\"\n          className=\"d-inline-block align-top\"\n        />{\" \"}\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        {Object.keys(educators).length ?\n          Object.keys(educators).map((i) => (\n            <Nav.Link key={educators[i].id} style={{ color: \"#FFF\" }} onClick={()=>setEducatorId(educators[i].id)} >{educators[i].name}</Nav.Link>\n          ))\n          : loading? \n          <Spinner animation=\"border\" />\n          : <Nav className=\"mr-auto\">\n            {/* <Nav.Link ><Link style={{ color: \"#FFF\" }} to=\"/\">Home</Link> </Nav.Link> */}\n            <Nav.Link ><Link style={{ color: \"#FFF\" }} to=\"/\">Logout</Link></Nav.Link>\n          </Nav>\n        }\n      </Navbar.Collapse>\n    </Navbar>\n  );\n\n}\n\nexport default MyNav;\n","import React from \"react\";\nimport logo from \"../assets/ithnain.png\";\nimport { Navbar } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <Navbar\n      bg=\"secondary\"\n      variant=\"dark\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        \n      }}\n    >\n      <img\n        alt=\"\"\n        src={logo}\n        width=\"100\"\n        height=\"50\"\n        className=\"d-inline-block align-top\"\n      />\n    </Navbar>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { ChatFeed, Message, ChatBubble } from 'react-chat-ui'\nimport { Container, Spinner } from 'react-bootstrap'\nimport { getMessages } from '../API/apiAuth'\n\nconst imgTypes = ['png', 'jpg', 'jpeg', 'gif'];\nconst fileTypes = ['pdf', 'doc', 'docx'];\nconst audioTypes = ['mp3', '3gp', 'caf', 'wav', 'wave', 'm4a'];\n\nclass Chat extends React.Component {\n\n    state = {\n        messages: [],\n    };\n\n    messagesEnd = React.createRef();\n    async componentDidMount() {\n\n        let chatId = '1234'\n        this.setState({ loading: true })\n        await getMessages(this.props.chatId)\n            .then(({ data }) => {\n                if (data) {\n                    let parsedMessages = data.map((element) => { return JSON.parse(element) })\n                    // return parsedMessages\n                    let messages = this.formatMessages(parsedMessages)\n                    this.setState({ messages, loading: false })\n                    // this.scrollToBottom()\n                }\n                else {\n                    this.setState({ loading: false })\n                    return []\n                }\n            }).catch(err => {\n                this.setState({ loading: false })\n                console.log(\"ERROR GETTING MESSAGES\", err)\n            })\n\n    }\n\n    formatMessages(messages = []) {\n        let formatedMessages = []\n        for (var i in messages) {\n            let message = messages[i];\n            let id = parseInt(message.user._id) - 1;\n            if (message.media) {\n                var fileNameArr = message.media.split('.');\n                var fileExtension = fileNameArr[fileNameArr.length - 1];\n                var isImg = imgTypes.includes(fileExtension);\n                var isFile = fileTypes.includes(fileExtension);\n                var isAudio = audioTypes.includes(fileExtension);\n                if (isImg) {\n                    message.message = { image: message.media };\n                    delete message.media;\n                } else if (isFile) {\n                    message.message = { text: message.text, file: message.media };\n                    delete message.media;\n                } else if (isAudio) {\n                    message.media = message.media.replace('vnd.wave', 'wav');\n                    message.message = { audio: message.media };\n                    delete message.media;\n                }\n                else {\n                    message.message = { text: '', }\n                }\n            } else if (message.text) {\n                message.message = { text: message.text }\n            }\n            else {\n                message.message = { text: '', }\n            }\n            message.message.createdOn = message.createdOn\n            let formattedMessage = new Message({ id, message: message.message })\n\n            formatedMessages.push(formattedMessage)\n        }\n        return formatedMessages;\n    }\n\n\n    onSend(messages = []) {\n        this.setState((previousState) => ({\n            messages: previousState.messages.append(messages),\n        }));\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' })\n    }\n    getTimeStamp(dateObject) {\n        let date = new Date(dateObject)\n        return `${date.getHours()}:${date.getMinutes()} - ${date.getMonth() + 1}/${date.getDate()}`\n    }\n    bubble(props) {\n        let { message } = props;\n        let container, colors;\n        if (message.id == 0) {\n            colors = styles.senderBubble;\n            container = styles.senderContainer;\n        } else {\n            colors = styles.receiverBubble;\n            container = styles.receiverContainer;\n        }\n        if (!message.message)\n            return null;\n\n        return (\n            // <ChatBubble message={new Message({id: 1, message:'hi'})} />\n            <div style={container}>\n                <div style={{ ...styles.bubble, ...colors }}>\n                    {\n                        message.message.image ? (\n                            <img src={message.message.image} />\n                        ) : message.message.file ? (\n                            <a href={message.message.file} target=\"_blank\">{message.message.text}</a>\n                        ) : message.message.text ? (\n                            message.message.text\n                            // null\n                        ) : null}\n                    <br />\n                    {this.getTimeStamp(message.message.createdOn)}\n                </div>\n            </div>\n        );\n    }\n    render() {\n        const { loading, messages } = this.state;\n\n        return (\n            <div style={{ paddingLeft: 0, paddingRight: 0, marginLeft: 0, marginRight: 0, width: '100vh', maxHeight: '80vh', overflowY: 'auto' }}>\n                {loading ?\n                    <Spinner animation=\"border\" />\n                    :\n                    !messages.length ?\n                        <div>المحادثة فارغة </div>\n                        : null\n                }\n                <ChatFeed\n                    messages={messages} // Boolean: list of message objects\n                    isTyping={this.state.is_typing} // Boolean: is the recipient typing\n                    hasInputField={false} // Boolean: use our input, or use your own\n                    showSenderName // show the name of the user who sent the message\n                    bubblesCentered={false} //Boolean should the bubbles be centered in the feed?\n                    chatBubble={ChatBubble}\n                    chatBubble={this.bubble.bind(this)}\n                />\n                <div style={{ float: \"left\", clear: \"both\" }}\n                    ref={(el) => { this.messagesEnd = el; }} />\n            </div>\n\n\n        );\n    }\n\n}\n\nexport default Chat\n\nconst styles = {\n    bubble: {\n        borderRadius: 15,\n        padding: 20,\n        backgroundColor: \"#3680E5\",\n        display: \"inline-block\",\n        color: \"white\"\n    },\n    senderBubble: {\n        backgroundColor: \"#3680E5\",\n        color: \"white\",\n    },\n    receiverBubble: {\n        backgroundColor: \"#D8D8D8\",\n        color: \"black\",\n    },\n    senderContainer: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        marginBottom: 5,\n    },\n    receiverContainer: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        marginBottom: 5,\n    },\n    // timestamp: {\n    //     margin: 0,\n    //     color: '#ccc',\n    //     fontSize: 11\n    // }\n};\n","import React, { useContext } from 'react'\nimport { Tab, Col, Row, Form } from 'react-bootstrap'\nimport { DataContext } from \"../stateManagement/context\";\n\nconst defaultProfile = {\n  years: '',\n  age: '',\n  weight: '',\n  height: '',\n  hba1c: '',\n  medications: '',\n  patientName: '',\n  notes: '',\n  disease: '',\n  sex: '',\n  whoIsPatient: '',\n  surgery: '',\n  otherDiseases: '',\n  haveTakenDiet: '',\n}\n\nconst PatientProfile = (props) => {\n  const context = useContext(DataContext)\n  let { chats, hidePatient, showEducators, activeChat } = context;\n\n  if (!chats) {\n    return null\n  }\n  console.log('rendering profile');\n\n  return chats.map(chat => {\n    if (!chat.medicalProfile) {\n       chat.medicalProfile= defaultProfile\n    }\n    let { years,\n      age,\n      weight,\n      height,\n      hba1c,\n      medications,\n      patientName,\n      notes,\n      disease,\n      sex,\n      whoIsPatient,\n      surgery,\n      otherDiseases,\n      haveTakenDiet,\n    } = chat.medicalProfile\n\n    if (chat.id != activeChat) {\n      return;\n    }\n    return (\n      <Tab.Pane key={chat.id} eventKey={chat.id}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"column\"\n          }}\n        >\n          <h3>{chat.id}</h3>\n\n          <Form style={{ width: '100vh', maxHeight: '75vh', overflowY: 'scroll', overflowX: 'hidden' }}>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  disease\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={disease} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  years\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={years} />\n                </Col>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  Hba1C\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={hba1c} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  age\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={age} />\n                </Col>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  sex\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={sex} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  Patient Type\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={whoIsPatient} />\n                </Col>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  medications\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={medications} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  otherDiseases\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={otherDiseases} />\n                </Col>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  Weight\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={weight} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  Height\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={height} />\n                </Col>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  Diet Taken\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={haveTakenDiet} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label column sm=\"10\">\n                  Past Surgeries\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" defaultValue={surgery} />\n                </Col>\n              </Form.Group>\n            </Form.Row>\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"10\">\n                Notes\n              </Form.Label>\n              <Col sm=\"10\">\n                <Form.Control as=\"textarea\" rows=\"3\" defaultValue={notes} />\n              </Col>\n            </Form.Group>\n          </Form>\n\n        </div>\n      </Tab.Pane>\n    );\n  });\n}\n\nexport default PatientProfile","import React, { useContext } from 'react'\nimport { DataContext } from \"../stateManagement/context\";\nimport {\n  Button,\n  Form,\n  ListGroup,\n  Row,\n  Col,\n  Container,\n  Tab,\n  Nav,\n  Table,\n  Accordion,\n  Card,\n} from \"react-bootstrap\";\n\nconst PatientEducators = (props) => {\n  const context = useContext(DataContext)\n  let { chats, patients, hidePatient, showEducators, educatorId, activeChat } = context;\n  \n  if (!chats) {\n    return null\n  }\n  const chat = chats.find(c => c.id == activeChat)\n  // return chats.map(chat => {\n    if(!chat){\n      return null\n    }\n    let patient = patients[chat.patientId]\n    console.log('educators:', chat.id);\n\n    return (\n      <Tab.Pane key={chat.id} eventKey={chat.id}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"column\"\n          }}\n        >\n        <h3 style={{marginBottom: 10}}>المثقفين المتابعين</h3>\n          <ListGroup as=\"ul\">\n            {patient && patient.educators && patient.educators.reverse().map(educator => (\n              <ListGroup.Item as=\"li\" key={educator.id} active={educator.id == educatorId}>{educator.name}</ListGroup.Item>\n            ))}\n          </ListGroup>\n        </div>\n      </Tab.Pane>\n    )\n  // })\n}\n\nexport default PatientEducators","import React from \"react\";\nimport {\n  Button,\n  ListGroup,\n  Container,\n  Tab, Tabs,\n  Table,\n} from \"react-bootstrap\";\nimport CardContainer from \"../components/CardContainer\";\nimport { DataContext } from \"../stateManagement/context\";\nimport { parseArray } from \"../helpers/Converters\";\n\nimport MyNav from \"../components/MyNav\";\nimport Footer from \"../components/Footer\";\nimport Chat from '../components/Chat';\nimport PatientProfile from './PatientProfile';\nimport PatientEducators from './PatientEducators';\n\nclass ShowPatientsView extends React.Component {\n  static contextType = DataContext;\n\n  state = {\n    username: \"\",\n    password: \"\",\n    activeList: '',\n    lang: {\n      ar: {\n        chat: 'المحادثة', \n        profile: 'البروفايل',\n        educators: 'المتابعين'\n      }\n    }\n  };\n\n  componentWillMount() {\n    if (this.context.educatorId == \"\") {\n      this.props.history.goBack();\n      // console.log(this.props)\n    }\n  }\n  componentDidMount() {\n    let { chats, educators } = this.context\n    if (!this.context.chats[0].id) {\n      chats = parseArray(this.context.chats);\n      this.context.setChats(chats)\n    }\n\n    let paths = []\n    for (var i in educators) {\n      let educator = educators[i]\n      paths.push({})\n    }\n  }\n\n  renderChat() {\n    let { chats, showPatient, activeChat } = this.context;\n    console.log('rendering chat', typeof chats, '\\nactivated', activeChat);\n\n    if (!chats) {\n      return null\n    }\n    return chats.map(chat => {\n      return (\n        <Tab.Pane key={chat.id} eventKey={chat.id} style={{ marginTop: 20 }}>\n          {/* <div>\n            <a style={{ color: '#3581b8' }} onClick={() => showPatient()}>مشاهدة البروفايل</a>\n          </div> */}\n          {activeChat == chat.id ?\n            <Chat chatId={chat.id} />\n            : null}\n        </Tab.Pane>\n      )\n    })\n  }\n\n  renderAppointments() {\n    const { appointments } = this.context;\n    // let appointments = {\n    //   '2020-11-28':\n    //     [{ date: '2020-11-28T17:00:00.000Z', name: 'W3', time: '20:00:00' },\n    //     { date: '2020-11-28T17:00:00.000Z', name: 'W1', time: '08:00:00' }],\n    //   '2020-11-29': [{ date: '2020-11-29T17:00:00.000Z', name: 'W2', time: '16:00:00' }]\n    // }\n    if (!appointments || (appointments && !Object.keys(appointments).length)) {\n      return null;\n    }\n    console.log('rendering appointments');\n\n    return Object.keys(appointments).map(appointmentDate => {\n      let appointmentsInDay = appointments[appointmentDate]\n\n      return (\n        <Tab.Pane key={appointmentDate} eventKey={appointmentDate}>\n          <div style={{ width: '100vh', maxHeight: '80vh', }}>\n            <div style={{ fontWeight: '600', marginBottom: 10, textAlign: 'center', fontSize: 20 }}>{appointmentDate}</div>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Time</th>\n                  <th>Patient Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                {appointmentsInDay.map(({ appointmentId, time, name }) => {\n                  let hours = parseInt(time.split(':')[0])\n                  let minutes = time.split(':')[1]\n                  let displayTime = hours > 12 ? `${hours - 12}:${minutes}` : `${hours}:${minutes}`\n                  return (\n                    <tr key={appointmentId}>\n                      <td>{displayTime}</td>\n                      <td>{name}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </div>\n        </Tab.Pane>\n      )\n    })\n  }\n\n  renderAppointmentsList() {\n    const { appointments, showAppointments } = this.context;\n    // let appointments = {\n    //   '2020-11-28':\n    //     [{ date: '2020-11-28T17:00:00.000Z', name: 'W3', time: '20:00:00' },\n    //     { date: '2020-11-28T17:00:00.000Z', name: 'W1', time: '08:00:00' }],\n    //   '2020-11-29': [{ date: '2020-11-29T17:00:00.000Z', name: 'W2', time: '16:00:00' }]\n    // }\n    console.log('appointments render:', appointments);\n\n    if (!appointments || (appointments && !Object.keys(appointments).length)) {\n      return null\n    }\n\n    return Object.keys(appointments).map(appointmentDate => {\n      return (\n        <ListGroup.Item key={appointmentDate} eventKey={appointmentDate} onClick={() => showAppointments()}>\n          {appointmentDate}\n        </ListGroup.Item>\n\n      );\n    });\n  }\n\n  renderPatientsList() {\n    const { chats, setActiveChat } = this.context;\n    if (!chats) {\n      return null\n    }\n    return chats.map(chat => {\n      return (\n        <ListGroup.Item key={chat.id} eventKey={chat.id} onClick={() => setActiveChat(chat.id)}>\n          {chat.patientName}\n        </ListGroup.Item>\n\n      );\n    });\n  }\n\n  setActiveList = (type) => {\n    this.setState({\n      activeList: type,\n    })\n\n  }\n\n  closeWindows = () => {\n    this.setState({\n      activeAppointment: '',\n    })\n    this.context.setActiveChat('')\n    this.context.hidePatient();\n    this.context.hideAppointments();\n  }\n\n  renderListHeader() {\n    let { activeList } = this.state;\n    let patientsStyle, appointmentStyle;\n    if (activeList == 'appointments') {\n      patientsStyle = 'dark'\n      appointmentStyle = 'primary'\n    } else {\n      patientsStyle = 'primary'\n      appointmentStyle = 'dark'\n    }\n    return (\n      <div style={{\n        display: 'block',\n        backgroundColor: 'white',\n        textAlign: 'center',\n        padding: 10\n      }}>\n        <Button variant={patientsStyle} onClick={() => this.setActiveList('patients')} style={{ marginRight: 5 }}>المحادثات</Button>\n        <Button variant={appointmentStyle} onClick={() => this.setActiveList('appointments')} >المواعيد</Button>\n\n      </div>\n    )\n  }\n\n  renderCircle() {\n    return (\n      <div style={styles.circle} onClick={() => this.closeWindows()}>\n        X\n      </div>\n    )\n  }\n\n  renderUpperTabs() {\n    const {chat, profile, educators} = this.state.lang.ar;\n    return (\n      <div >\n        <Tabs defaultActiveKey=\"chat\" id=\"noanim-tab-example\" mountOnEnter >\n          <Tab eventKey=\"chat\" title={chat}>\n            {this.renderChat()}\n          </Tab>\n          <Tab eventKey=\"profile\" title={profile}>\n            <PatientProfile />\n          </Tab>\n          <Tab eventKey=\"educators\" title={educators} >\n            <PatientEducators />\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n\n  render() {\n    let { activeList  } = this.state\n    let { patientsVisible, appointmentsVisible, educatorsVisible , activeChat } = this.context\n\n    return (\n      <>\n        <MyNav />\n        <Container\n          fluid\n          style={styles.container}>\n          <CardContainer width=\"80%\" direction=\"row\" padding={10} marginT={40} marginB={40}>\n            <Tab.Container >\n              <div className=\"left-col\">\n                {this.renderListHeader()}\n                {activeList == 'appointments' ?\n                  <ListGroup >{this.renderAppointmentsList()}</ListGroup>\n                  : <ListGroup >{this.renderPatientsList()}</ListGroup>\n                }\n              </div>\n              <div className=\"right-col\">\n\n                <Tab.Content style={{ width: '100%', height: '100%', overflow: 'hidden' }}>\n                  {this.renderCircle()}\n                  {activeList == 'appointments' && appointmentsVisible ?\n                    this.renderAppointments()\n                    : activeChat ?\n                      this.renderUpperTabs()\n                      : null\n                  }\n                </Tab.Content>\n              </div>\n            </Tab.Container>\n          </CardContainer>\n        </Container>\n        <Footer />\n      </>\n    );\n  }\n\n}\n\nexport default ShowPatientsView;\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    backgroundColor: \"#0a122a\"\n  },\n  circle: {\n    width: 30,\n    height: 30,\n    borderWidth: 0,\n    textAlign: 'center',\n    borderStyle: 'solid',\n    borderColor: '#000',\n    color: '#000',\n    borderRadius: 80,\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    position: 'absolute',\n    right: 20,\n    top: 20,\n    boxShadow: \"0px 2px 5px 4px rgba(0,0,0,0.1)\"\n  }\n}","import React from 'react';\nimport './App.css';\nimport './scss/app.scss'\nimport {DataProvider} from './stateManagement/context'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport LoginView from './views/LoginView'\nimport ShowPatientsView from './views/ShowPatientsView'\n\nfunction App() {\n  return (\n    <DataProvider>\n      <Router>\n       \n\n     \n      \n        <Switch>\n        <Route exact path=\"/\" component={LoginView} />\n        {/* <Redirect from=\"/educator-webapp\" exact to=\"/\" /> */}\n        {/* <Route exact path=\"/\" component={ShowPatientsView} /> */}\n        <Route exact path=\"/showpatients\" component={ShowPatientsView} />\n        </Switch>\n      </Router>\n   \n    </DataProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ithnain.287167eb.png\";"],"sourceRoot":""}