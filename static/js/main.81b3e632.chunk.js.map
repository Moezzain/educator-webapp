{"version":3,"sources":["config/apiConfig.js","helpers/Converters.js","API/apiEducator.js","stateManagement/context.js","components/CardContainer.js","API/apiAuth.js","views/LoginView.js","components/MyNav.js","components/Footer.js","components/Chat.js","views/PatientProfile.js","views/PatientEducators.js","views/ShowPatientsView.js","App.js","serviceWorker.js","index.js","assets/ithnain.png"],"names":["apiUrl","parseArray","arr","map","element","JSON","parse","parseObjectOfArrays","obj","parsed","objects","key","current","Array","isArray","push","getMessages","chatId","educatorId","token","a","axios","get","url","headers","Authorization","timeout","result","data","getEducatorIds","educators","forEach","educator","name","id","console","log","getEducatorChats","i","getChats","chats","count","length","error","item","getAllEducatorsAndPatients","patients","getEducatorData","appointments","chat","patient","patientId","parsedData","DataContext","React","createContext","DataProvider","props","saveData","filterAppointments","localStorage","setItem","setState","setEducatorId","saveToken","getLocalData","getItem","clearState","clear","activeChat","loading","patientsVisible","appointmentsVisible","educatorsVisible","state","setActiveEducator","setChats","showPatient","hidePatient","showAppointments","hideAppointments","showEducators","hideEducators","setActiveChat","this","output","app","appointmentDate","date","split","Provider","value","children","Component","Consumer","CardContainer","Card","style","width","flexDirection","direction","backgroundColor","padding","marginBottom","marginB","marginTop","marginT","borderRadius","login","username","password","text","sha256","encryptedPassword","post","Login","handleChange","e","target","onSubmit","then","res","tokens","context","history","catch","err","Container","fluid","display","justifyContent","alignItems","height","Row","Col","sm","lg","src","logo","Form","Group","controlId","Label","Control","type","placeholder","onChange","Spinner","alignSelf","animation","Button","variant","onClick","contextType","MyNav","useContext","Navbar","bg","collapseOnSelect","expand","Brand","alt","className","Toggle","aria-controls","Collapse","Object","keys","Nav","Link","color","to","Footer","imgTypes","fileTypes","audioTypes","Chat","messages","duration","lang","ar","messageCount","usageDuration","messagesEnd","createRef","scrollToBottom","scrollIntoView","behavior","formatMessages","setDuration","first","Date","message","createdOn","last","diffTime","Math","abs","ceil","formatedMessages","parseInt","user","_id","media","fileNameArr","fileExtension","isImg","includes","isFile","isAudio","image","file","replace","audio","formattedMessage","Message","previousState","append","dateObject","getHours","getMinutes","getMonth","getDate","container","colors","styles","senderBubble","senderContainer","receiverBubble","receiverContainer","bubble","href","getTimeStamp","paddingLeft","paddingRight","marginLeft","marginRight","maxHeight","overflowY","isTyping","is_typing","hasInputField","showSenderName","bubblesCentered","chatBubble","ChatBubble","bind","float","ref","el","defaultProfile","years","age","weight","hba1c","medications","patientName","notes","disease","sex","whoIsPatient","surgery","otherDiseases","haveTakenDiet","PatientProfile","medicalProfile","Tab","Pane","eventKey","overflowX","as","column","defaultValue","rows","PatientEducators","find","c","ListGroup","reverse","Item","active","ShowPatientsView","activeList","profile","setActiveList","closeWindows","activeAppointment","goBack","paths","appointmentsInDay","fontWeight","textAlign","fontSize","Table","striped","bordered","hover","appointmentId","time","hours","minutes","displayTime","patientsStyle","appointmentStyle","circle","Tabs","defaultActiveKey","mountOnEnter","title","renderChat","renderListHeader","renderAppointmentsList","renderPatientsList","Content","overflow","renderCircle","renderAppointments","renderUpperTabs","borderWidth","borderStyle","borderColor","position","right","top","boxShadow","App","exact","path","component","LoginView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.81b3e632.chunk.js","sourcesContent":["let apiUrl = 'https://api.ithnain.com'\r\n// let apiUrl= 'http://ec2-157-175-56-64.me-south-1.compute.amazonaws.com:3002'\r\n// let apiUrl = 'http://cors-anywhere.herokuapp.com/https://ithnain-test-backend.herokuapp.com'\r\n\r\n// let apiUrl= 'http://192.168.8.109:3000'\r\n// let apiUrl= 'http://192.168.8.106:3000'\r\n// let apiUrl= 'https://157.175.113.31:3000'\r\n// const expressPort = 3000\r\n// const apiUrls = {\r\n//   production: 'Production URL',\r\n//   development: `http://localhost:${expressPort}`\r\n// }\r\n\r\n// if (window.location.hostname === 'localhost') {\r\n//   apiUrl = apiUrls.development\r\n// } else {\r\n//   apiUrl = apiUrls.production\r\n// }\r\n\r\nexport default apiUrl","export function parseArray(arr){\r\n    return arr.map((element) => { return JSON.parse(element) })\r\n}\r\n\r\nexport function parseObjectOfArrays(obj){\r\n    let parsed=[]\r\n    let objects={}\r\n    for(var key in obj){\r\n        var current=obj[key]\r\n        if (Array.isArray(current)) {\r\n            objects[key]= parseArray(current)\r\n            parsed.push(parseArray(current))\r\n        }\r\n    }\r\n    return objects\r\n}","import url from '../config/apiConfig'\r\nimport { parseObjectOfArrays } from '../helpers/Converters'\r\nimport axios from \"axios\"\r\n\r\nexport const getMessages = async (chatId, educatorId, token) => {\r\n  try {\r\n    let result = await axios\r\n        .get(`${url}/message?chatId=${chatId}&educatorId=${educatorId}`, {headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }, timeout: 10000 })\r\n    if (result?.data) {\r\n      return result.data\r\n    }\r\n  } catch (error) {\r\n      return error\r\n  }\r\n}\r\n\r\nexport const getEducatorIds = async (educatorId, token) => {\r\n  try {\r\n\r\n    const result = await axios.get(`${url}/educator?get=all&id=${educatorId}&educatorId=${educatorId}`, {headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }})\r\n    if (result.data) {\r\n      let educators = {}\r\n      result.data.forEach((educator) => {\r\n        let { name, id } = JSON.parse(educator)\r\n        educators[id] = { name, id }\r\n      })\r\n      return educators;\r\n    }\r\n  } catch(err) {\r\n    console.log('Error getEducatorIds', err);\r\n  }\r\n}\r\n\r\nexport const getEducatorChats = async (educatorId, token) => {\r\n  const educators = await getEducatorIds(educatorId, token);\r\n  let patientChats = []\r\n  for (var i in educators) {\r\n    let chats = await getChats(educators[i].id, token)\r\n    if (chats) {\r\n      educators[i].chats = chats\r\n      educators[i].count = chats.length\r\n    }\r\n  }\r\n  return educators;\r\n}\r\n\r\nexport const getChats = async (educatorId, token) => {\r\n  try {\r\n    const result = await axios.get(`${url}/chat?educatorId=${educatorId}`, {headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }})\r\n    if(result.data) {\r\n      if (result.data.error) {\r\n        return;\r\n      }\r\n      let chats = result.data.map((item) => JSON.parse(item))\r\n      return chats\r\n    }\r\n  } catch (error) {\r\n    console.log(\"Error getting chats:\", error);\r\n  }\r\n}\r\n\r\nexport const getAllEducatorsAndPatients = async (educatorId, token) => {\r\n  try {\r\n    const educators = await getEducatorIds(educatorId, token);\r\n    let patients = {}\r\n    for (var i in educators) {\r\n      let educator = educators[i]\r\n      let {chats, appointments}= await getEducatorData(educator.id, token)\r\n\r\n      if (chats) {\r\n        educator.chats = chats\r\n        educator.count = chats.length\r\n        chats.forEach((chat) => {\r\n          let patient = patients[chat.patientId]\r\n          if (!patient) {\r\n            patients[chat.patientId] = chat\r\n            patient= patients[chat.patientId]\r\n          }\r\n          if (patient && patient.educators) {\r\n            patient.educators.push({id: educator.id, name: educator.name})\r\n          }\r\n          else {\r\n            patient.educators = [{id: educator.id, name: educator.name}]\r\n          }\r\n        })\r\n        // break;\r\n\r\n      }\r\n      if (appointments) {\r\n        educators[i].appointments = appointments\r\n      }\r\n    // }\r\n    }\r\n\r\n    return {educators, patients};\r\n  }\r\n  catch (error) {\r\n    console.log(' Error getAllEducatorsAndPatients', error);\r\n  }\r\n}\r\n\r\n\r\nexport const getEducatorData = async (educatorId, token) => {\r\n  try {\r\n    const get = 'chats,appointments,educator,all';\r\n    const result = await axios.get(`${url}/educator?id=${educatorId}&get=${get}&educatorId=${educatorId}`, {headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }})\r\n    if(result.data) {\r\n      const {data} = result;\r\n      delete data.educator\r\n      let parsedData = parseObjectOfArrays(data);\r\n      const { appointments, chats } = parsedData;\r\n      return { chats, appointments };\r\n    }\r\n  } catch (error) {\r\n    console.log('getEducatorData', error);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { getEducatorChats, getAllEducatorsAndPatients } from '../API/apiEducator'\r\n\r\nconst DataContext = React.createContext();\r\nclass DataProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // educatorId: '',\r\n      educatorId: '',\r\n      token: '',\r\n      activeChat: '',\r\n      loading: false,\r\n      patientsVisible: false,\r\n      appointmentsVisible: true,\r\n      educatorsVisible: false,\r\n      appointments: {},\r\n      educators: {},\r\n      patients: {},\r\n      chats: []\r\n    };\r\n  }\r\n\r\n\r\n  saveData = (educatorId, appointments, chats) => {\r\n    appointments = this.filterAppointments(appointments)\r\n    localStorage.setItem('educatorId', educatorId)\r\n    this.setState({ educatorId, appointments, chats })\r\n    // if (educatorId == '8bd3c7e1-c6ec-48bf-8ac8-80bf1f013eef')\r\n    console.log('educatorId', educatorId);\r\n    if (educatorId == '55aabda5-8af2-4a39-b074-80a1852dcb1d')\r\n      this.getEducatorData();\r\n\r\n  }\r\n\r\n  setEducatorId = (educatorId) => this.setState({educatorId});\r\n\r\n  saveToken = (token) => {\r\n    this.setState({token});\r\n    localStorage.setItem('token', token);\r\n  }\r\n  componentDidMount() {\r\n    this.getLocalData();\r\n  }\r\n  // componentDidMount() {\r\n  //   this.getEducatorData(this.state.token);  \r\n  // }\r\n\r\n  getLocalData = () => {\r\n    const educatorId= localStorage.getItem('educatorId')\r\n    const token = localStorage.getItem('token')\r\n    if (educatorId && token) {\r\n      this.saveToken(token)\r\n      this.setEducatorId(educatorId)\r\n    }\r\n  }\r\n\r\n  clearState = () => {\r\n    localStorage.clear();\r\n    this.setState({\r\n            // educatorId: '',\r\n            educatorId: '',\r\n            token: '',\r\n            activeChat: '',\r\n            loading: false,\r\n            patientsVisible: false,\r\n            appointmentsVisible: true,\r\n            educatorsVisible: false,\r\n            appointments: {},\r\n            educators: {},\r\n            patients: {},\r\n            chats: []\r\n    })\r\n  }\r\n\r\n  filterAppointments(appointments) {\r\n\r\n    if (appointments) {\r\n      let output = {}\r\n      appointments.forEach(app => {\r\n        if (typeof app == 'string') {\r\n          app = JSON.parse(app)\r\n        }\r\n        var appointmentDate = app.date.split('T')[0]\r\n        //if there is no array with this Date key, make one and add to it the appointment\r\n        if (!output[appointmentDate]) {\r\n          output[appointmentDate] = [app]\r\n        }\r\n        else {\r\n          //if it already exists, push to it the appointment\r\n          output[appointmentDate].push(app)\r\n        }\r\n      })\r\n\r\n      return output\r\n    }\r\n    return appointments\r\n  }\r\n\r\n\r\n  getEducatorChats = async () => {\r\n    this.setState({ loading: true })\r\n    const {token, educatorId} = this.state;\r\n    let educators = await getEducatorChats(educatorId, token);\r\n    if (educators) {\r\n      this.setState({ educators, loading: false })\r\n      return educators\r\n    }\r\n    else {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  getEducatorData = async () => {\r\n    this.setState({ loading: true });\r\n    const {token, educatorId} = this.state;\r\n    let {educators, patients} = await getAllEducatorsAndPatients(educatorId, token);\r\n    if (educators && patients) {\r\n      this.setState({ educators, patients, loading: false })\r\n      return educators\r\n    }\r\n    else if (educators) {\r\n      this.setState({ educators, loading: false })\r\n      return educators\r\n    }\r\n    else {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  setActiveEducator = educatorId => {\r\n    let appointments = this.filterAppointments(this.state.educators[educatorId].appointments)\r\n\r\n    this.setState({\r\n      educatorId,\r\n      chats: this.state.educators[educatorId].chats,\r\n      appointments\r\n    })\r\n\r\n  }\r\n  setChats = chats => this.setState({ chats })\r\n  showPatient = () => this.setState({ patientsVisible: true })\r\n  hidePatient = () => this.setState({ patientsVisible: false })\r\n  showAppointments = () => this.setState({ appointmentsVisible: true })\r\n  hideAppointments = () => this.setState({ appointmentsVisible: false })\r\n  showEducators = () => this.setState({ educatorsVisible: true, patientsVisible: false })\r\n  hideEducators = () => this.setState({ educatorsVisible: false, patientsVisible: true })\r\n  setActiveChat = chatId => this.setState({ activeChat: chatId })\r\n  render() {\r\n\r\n    return (\r\n      <DataContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          saveData: this.saveData,\r\n          saveToken: this.saveToken,\r\n          clearState: this.clearState,\r\n          getEducatorChats: this.getEducatorChats,\r\n          setEducatorId: this.setEducatorId,\r\n          setActiveEducator: this.setActiveEducator,\r\n          setChats: this.setChats,\r\n          showPatient: this.showPatient,\r\n          hidePatient: this.hidePatient,\r\n          showAppointments: this.showAppointments,\r\n          hideAppointments: this.hideAppointments,\r\n          showEducators: this.showEducators,\r\n          hideEducators: this.hideEducators,\r\n          setActiveChat: this.setActiveChat,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </DataContext.Provider>\r\n    );\r\n  }\r\n}\r\nconst DataConsumer = DataContext.Consumer;\r\n\r\nexport { DataProvider, DataConsumer, DataContext };\r\n\r\n","import React, { Component } from \"react\";\r\nimport {Card,} from 'react-bootstrap'\r\n\r\nclass CardContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Card  style={{ width: this.props.width, \r\n       \r\n    //   padding: \"2%\",\r\n     flexDirection: this.props.direction,\r\n      backgroundColor: \"rgba(247,247,247,1)\",\r\n      padding: this.props.padding,\r\n      marginBottom: this.props.marginB,\r\n      marginTop: this.props.marginT,\r\n      borderRadius: 25\r\n    //   boxShadow: '1px 3px 5px rgba(255,255,255,0.9)' \r\n      }}>\r\n            {this.props.children}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardContainer;\r\n","import axios from \"axios\"\r\nimport url from '../config/apiConfig'\r\nimport { sha256 } from 'js-sha256';\r\n\r\nconst encrypt = (text) => {\r\n    return sha256(text);\r\n}\r\n\r\nexport const login = async ({ username, password }) => {\r\n    let encryptedPassword = await encrypt(password);\r\n    \r\n    const data = {\r\n        id: username,\r\n        password: encryptedPassword\r\n    }\r\n    return axios.post(`${url}/login`, data)\r\n}\r\n","import React from \"react\";\r\nimport { Button, Form, Row, Col, Container, Spinner } from \"react-bootstrap\";\r\nimport CardContainer from \"../components/CardContainer\";\r\nimport logo from \"../assets/ithnain.png\";\r\nimport { login } from '../API/apiAuth'\r\nimport { DataContext } from '../stateManagement/context'\r\n\r\nclass Login extends React.Component {\r\n\r\n  static contextType = DataContext;\r\n\r\n\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    loading: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.context.getLocalData();\r\n      if(this.context.token) {\r\n        this.props.history.push(\"showpatients\")\r\n      }\r\n    } catch (err) {\r\n      console.log('context not loaded');\r\n    }\r\n    \r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit = () => {    \r\n    this.setState({ loading: true })\r\n    login(this.state)\r\n      .then(res => {\r\n        const educator = JSON.parse(res.data.educator)\r\n        const tokens = educator.token;\r\n        const token= tokens[tokens.length -1];\r\n        const {educatorId, appointments, chats} = res.data;\r\n        this.setState({ loading: false })\r\n        this.context.saveToken(token);\r\n        this.context.saveData(educatorId, appointments, chats)\r\n        this.props.history.push(\"showpatients\")\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        this.setState({ loading: false })\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { username, password, loading} = this.state;\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100vh\",\r\n          backgroundColor: \"#0a122a\"\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col\r\n            sm={12}\r\n            lg={4}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <img src={logo} style={{ width: \"50%\", marginBottom: \"4%\" }} />\r\n          </Col>\r\n          <Col\r\n            sm={12}\r\n            lg={6}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <CardContainer width=\"80%\" padding={30}>\r\n              <Form style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter username\"\r\n                    value={username}\r\n                    name={\"username\"}\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    name={\"password\"}\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                </Form.Group>\r\n                {loading? <Spinner style={{alignSelf:'center', marginBottom: 10}} animation=\"border\" /> : null}\r\n                <Button variant=\"primary\" onClick={this.onSubmit}>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </CardContainer>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component, useContext } from \"react\";\r\nimport logo from '../assets/ithnain.png'\r\nimport { Navbar, Spinner, Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {DataContext} from '../stateManagement/context'\r\n\r\nconst MyNav = (props) => {\r\n\r\n  const {educators, setActiveEducator, loading, clearState}= useContext(DataContext)\r\n\r\n  return (\r\n    <Navbar bg=\"secondary\" variant=\"dark\" collapseOnSelect expand=\"lg\">\r\n      <Navbar.Brand >\r\n        <img\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"80\"\r\n          height=\"40\"\r\n          className=\"d-inline-block align-top\"\r\n        />{\" \"}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        {Object.keys(educators).length ?\r\n          Object.keys(educators).map((i) => (\r\n            <Nav.Link key={educators[i].id} style={{ color: \"#FFF\" }} onClick={()=>setActiveEducator(educators[i].id)} >{educators[i].name}</Nav.Link>\r\n          ))\r\n          : loading? \r\n          <Spinner animation=\"border\" />\r\n          : <Nav className=\"mr-auto\">\r\n            {/* <Nav.Link ><Link style={{ color: \"#FFF\" }} to=\"/\">Home</Link> </Nav.Link> */}\r\n            <Nav.Link ><Link style={{ color: \"#FFF\" }} to=\"/\" onClick={()=> clearState()}>Logout</Link></Nav.Link>\r\n          </Nav>\r\n        }\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n\r\n}\r\n\r\nexport default MyNav;\r\n","import React from \"react\";\r\nimport logo from \"../assets/ithnain.png\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar\r\n      bg=\"secondary\"\r\n      variant=\"dark\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        \r\n      }}\r\n    >\r\n      <img\r\n        alt=\"\"\r\n        src={logo}\r\n        width=\"100\"\r\n        height=\"50\"\r\n        className=\"d-inline-block align-top\"\r\n      />\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { ChatFeed, Message, ChatBubble } from 'react-chat-ui'\r\nimport { Container, Spinner } from 'react-bootstrap'\r\nimport { getMessages } from '../API/apiEducator'\r\n\r\nconst imgTypes = ['png', 'jpg', 'jpeg', 'gif'];\r\nconst fileTypes = ['pdf', 'doc', 'docx'];\r\nconst audioTypes = ['mp3', '3gp', 'caf', 'wav', 'wave', 'm4a'];\r\n\r\nclass Chat extends React.Component {\r\n\r\n    state = {\r\n        messages: [],\r\n        duration: 0,\r\n        lang:{\r\n            ar: {\r\n                messageCount: 'عدد الرسائل',\r\n                usageDuration: 'مدة الاستخدام'\r\n            }\r\n        }\r\n    };\r\n\r\n    messagesEnd = React.createRef();\r\n    async componentDidMount() {\r\n        console.log('token:', this.props.token);\r\n        let chatId = '1234'\r\n        this.setState({ loading: true })\r\n        await getMessages(this.props.chatId, this.props.educatorId, this.props.token)\r\n            .then((data) => {\r\n                console.log('data', data);\r\n                if (data) {\r\n                    let messages = this.formatMessages(data)\r\n                    this.setDuration(messages)\r\n                    this.setState({ messages, loading: false })\r\n                    // this.scrollToBottom()\r\n                }\r\n                else {\r\n                    this.setState({ loading: false })\r\n                    return []\r\n                }\r\n            }).catch(err => {\r\n                this.setState({ loading: false })\r\n                console.log(\"ERROR GETTING MESSAGES\", err)\r\n            })\r\n\r\n    }\r\n\r\n    setDuration(messages =[]){\r\n        if(messages && messages.length >0){\r\n            let first = new Date(messages[0].message.createdOn)\r\n            let last = new Date(messages[messages.length-1].message.createdOn)\r\n            const diffTime = Math.abs(last - first);\r\n            const duration = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \r\n            this.setState({duration})\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    formatMessages(messages = []) {\r\n        let formatedMessages = []\r\n        for (var i in messages) {\r\n            let message = messages[i];\r\n            let id = parseInt(message.user._id) - 1;\r\n            if (message.media) {\r\n                var fileNameArr = message.media.split('.');\r\n                var fileExtension = fileNameArr[fileNameArr.length - 1];\r\n                var isImg = imgTypes.includes(fileExtension);\r\n                var isFile = fileTypes.includes(fileExtension);\r\n                var isAudio = audioTypes.includes(fileExtension);\r\n                if (isImg) {\r\n                    message.message = { image: message.media };\r\n                    delete message.media;\r\n                } else if (isFile) {\r\n                    message.message = { text: message.text, file: message.media };\r\n                    delete message.media;\r\n                } else if (isAudio) {\r\n                    message.media = message.media.replace('vnd.wave', 'wav');\r\n                    message.message = { audio: message.media };\r\n                    delete message.media;\r\n                }\r\n                else {\r\n                    message.message = { text: '', }\r\n                }\r\n            } else if (message.text) {\r\n                message.message = { text: message.text }\r\n            }\r\n            else {\r\n                message.message = { text: '', }\r\n            }\r\n            message.message.createdOn = message.createdOn\r\n            let formattedMessage = new Message({ id, message: message.message })\r\n\r\n            formatedMessages.push(formattedMessage)\r\n        }\r\n        return formatedMessages;\r\n    }\r\n\r\n\r\n    onSend(messages = []) {\r\n        this.setState((previousState) => ({\r\n            messages: previousState.messages.append(messages),\r\n        }));\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n    getTimeStamp(dateObject) {\r\n        let date = new Date(dateObject)\r\n        return `${date.getHours()}:${date.getMinutes()} - ${date.getMonth() + 1}/${date.getDate()}`\r\n    }\r\n    bubble(props) {\r\n        let { message } = props;\r\n        let container, colors;\r\n        if (message.id == 0) {\r\n            colors = styles.senderBubble;\r\n            container = styles.senderContainer;\r\n        } else {\r\n            colors = styles.receiverBubble;\r\n            container = styles.receiverContainer;\r\n        }\r\n        if (!message.message)\r\n            return null;\r\n\r\n        return (\r\n            // <ChatBubble message={new Message({id: 1, message:'hi'})} />\r\n            <div style={container}>\r\n                <div style={{ ...styles.bubble, ...colors }}>\r\n                    {\r\n                        message.message.image ? (\r\n                            <img src={message.message.image} />\r\n                        ) : message.message.file ? (\r\n                            <a href={message.message.file} target=\"_blank\">{message.message.text}</a>\r\n                        ) : message.message.text ? (\r\n                            message.message.text\r\n                            // null\r\n                        ) : null}\r\n                    <br />\r\n                    {this.getTimeStamp(message.message.createdOn)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        const { loading, messages, duration } = this.state;\r\n        const {messageCount, usageDuration} = this.state.lang.ar\r\n        return (\r\n            <div style={{ paddingLeft: 0, paddingRight: 0, marginLeft: 0, marginRight: 0, width: '100vh', maxHeight: '80vh', overflowY: 'auto' }}>\r\n                {loading ?\r\n                    <Spinner animation=\"border\" />\r\n                    :\r\n                    !messages.length ?\r\n                        <div>المحادثة فارغة </div>\r\n                        : null\r\n                }\r\n                <div>\r\n                {messages.length} :{messageCount} <br />\r\n                {usageDuration}: {duration} {\"يوم\"}\r\n                    \r\n                </div>\r\n                <ChatFeed\r\n                    messages={messages} // Boolean: list of message objects\r\n                    isTyping={this.state.is_typing} // Boolean: is the recipient typing\r\n                    hasInputField={false} // Boolean: use our input, or use your own\r\n                    showSenderName // show the name of the user who sent the message\r\n                    bubblesCentered={false} //Boolean should the bubbles be centered in the feed?\r\n                    chatBubble={ChatBubble}\r\n                    chatBubble={this.bubble.bind(this)}\r\n                />\r\n                <div style={{ float: \"left\", clear: \"both\" }}\r\n                    ref={(el) => { this.messagesEnd = el; }} />\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Chat\r\n\r\nconst styles = {\r\n    bubble: {\r\n        borderRadius: 15,\r\n        padding: 20,\r\n        backgroundColor: \"#3680E5\",\r\n        display: \"inline-block\",\r\n        color: \"white\"\r\n    },\r\n    senderBubble: {\r\n        backgroundColor: \"#3680E5\",\r\n        color: \"white\",\r\n    },\r\n    receiverBubble: {\r\n        backgroundColor: \"#D8D8D8\",\r\n        color: \"black\",\r\n    },\r\n    senderContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        marginBottom: 5,\r\n    },\r\n    receiverContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        marginBottom: 5,\r\n    },\r\n    // timestamp: {\r\n    //     margin: 0,\r\n    //     color: '#ccc',\r\n    //     fontSize: 11\r\n    // }\r\n};\r\n","import React, { useContext } from 'react'\r\nimport { Tab, Col, Row, Form } from 'react-bootstrap'\r\nimport { DataContext } from \"../stateManagement/context\";\r\n\r\nconst defaultProfile = {\r\n  years: '',\r\n  age: '',\r\n  weight: '',\r\n  height: '',\r\n  hba1c: '',\r\n  medications: '',\r\n  patientName: '',\r\n  notes: '',\r\n  disease: '',\r\n  sex: '',\r\n  whoIsPatient: '',\r\n  surgery: '',\r\n  otherDiseases: '',\r\n  haveTakenDiet: '',\r\n}\r\n\r\nconst PatientProfile = (props) => {\r\n  const context = useContext(DataContext)\r\n  let { chats, hidePatient, showEducators, activeChat } = context;\r\n\r\n  if (!chats) {\r\n    return null\r\n  }\r\n  console.log('rendering profile');\r\n\r\n  return chats.map(chat => {\r\n    if (!chat.medicalProfile) {\r\n       chat.medicalProfile= defaultProfile\r\n    }\r\n    let { years,\r\n      age,\r\n      weight,\r\n      height,\r\n      hba1c,\r\n      medications,\r\n      patientName,\r\n      notes,\r\n      disease,\r\n      sex,\r\n      whoIsPatient,\r\n      surgery,\r\n      otherDiseases,\r\n      haveTakenDiet,\r\n    } = chat.medicalProfile\r\n\r\n    if (chat.id != activeChat) {\r\n      return;\r\n    }\r\n    return (\r\n      <Tab.Pane key={chat.id} eventKey={chat.id}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          <h3>{chat.id}</h3>\r\n\r\n          <Form style={{ width: '100vh', maxHeight: '75vh', overflowY: 'scroll', overflowX: 'hidden' }}>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  disease\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={disease} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  years\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={years} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  Hba1C\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={hba1c} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  age\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={age} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  sex\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={sex} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  Patient Type\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={whoIsPatient} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  medications\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={medications} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  otherDiseases\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={otherDiseases} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  Weight\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={weight} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  Height\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={height} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  Diet Taken\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={haveTakenDiet} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  Past Surgeries\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={surgery} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm=\"10\">\r\n                Notes\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control as=\"textarea\" rows=\"3\" defaultValue={notes} />\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n\r\n        </div>\r\n      </Tab.Pane>\r\n    );\r\n  });\r\n}\r\n\r\nexport default PatientProfile","import React, { useContext } from 'react'\r\nimport { DataContext } from \"../stateManagement/context\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  ListGroup,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Tab,\r\n  Nav,\r\n  Table,\r\n  Accordion,\r\n  Card,\r\n} from \"react-bootstrap\";\r\n\r\nconst PatientEducators = (props) => {\r\n  const context = useContext(DataContext)\r\n  let { chats, patients, hidePatient, showEducators, educatorId, activeChat } = context;\r\n  \r\n  if (!chats) {\r\n    return null\r\n  }\r\n  const chat = chats.find(c => c.id == activeChat)\r\n  // return chats.map(chat => {\r\n    if(!chat){\r\n      return null\r\n    }\r\n    let patient = patients[chat.patientId]\r\n    console.log('educators:', chat.id);\r\n\r\n    return (\r\n      <Tab.Pane key={chat.id} eventKey={chat.id}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n        <h3 style={{marginBottom: 10}}>المثقفين المتابعين</h3>\r\n          <ListGroup as=\"ul\">\r\n            {patient && patient.educators && patient.educators.reverse().map(educator => (\r\n              <ListGroup.Item as=\"li\" key={educator.id} active={educator.id == educatorId}>{educator.name}</ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </div>\r\n      </Tab.Pane>\r\n    )\r\n  // })\r\n}\r\n\r\nexport default PatientEducators","import React from \"react\";\r\nimport {\r\n  Button,\r\n  ListGroup,\r\n  Container,\r\n  Tab, Tabs,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport CardContainer from \"../components/CardContainer\";\r\nimport { DataContext } from \"../stateManagement/context\";\r\nimport { parseArray } from \"../helpers/Converters\";\r\n\r\nimport MyNav from \"../components/MyNav\";\r\nimport Footer from \"../components/Footer\";\r\nimport Chat from '../components/Chat';\r\nimport PatientProfile from './PatientProfile';\r\nimport PatientEducators from './PatientEducators';\r\n\r\nclass ShowPatientsView extends React.Component {\r\n  static contextType = DataContext;\r\n\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    activeList: '',\r\n    lang: {\r\n      ar: {\r\n        chat: 'المحادثة', \r\n        profile: 'البروفايل',\r\n        educators: 'المتابعين'\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (this.context.educatorId == \"\") {\r\n      this.props.history.goBack();\r\n      // console.log(this.props)\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let { chats, educators } = this.context\r\n    try {\r\n      if (this.context?.chats?.length && !this.context.chats[0].id) {\r\n        chats = parseArray(this.context.chats);\r\n        this.context.setChats(chats)\r\n      }\r\n\r\n      let paths = []\r\n      for (var i in educators) {\r\n        let educator = educators[i]\r\n        paths.push({})\r\n      }\r\n    } catch(err) {\r\n      console.log('error setting chats:', err);\r\n    }\r\n  }\r\n\r\n  renderChat() {\r\n    let { chats, showPatient, activeChat, token, educatorId } = this.context;\r\n    console.log('rendering chat', typeof chats, '\\nactivated', activeChat);\r\n\r\n    if (!chats) {\r\n      return null\r\n    }\r\n    return chats.map(chat => {\r\n      return (\r\n        <Tab.Pane key={chat.id} eventKey={chat.id} style={{ marginTop: 20 }}>\r\n          {/* <div>\r\n            <a style={{ color: '#3581b8' }} onClick={() => showPatient()}>مشاهدة البروفايل</a>\r\n          </div> */}\r\n          {activeChat == chat.id ?\r\n            <Chat chatId={chat.id} token={token} educatorId={educatorId} />\r\n            : null}\r\n        </Tab.Pane>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderAppointments() {\r\n    const { appointments } = this.context;\r\n    // let appointments = {\r\n    //   '2020-11-28':\r\n    //     [{ date: '2020-11-28T17:00:00.000Z', name: 'W3', time: '20:00:00' },\r\n    //     { date: '2020-11-28T17:00:00.000Z', name: 'W1', time: '08:00:00' }],\r\n    //   '2020-11-29': [{ date: '2020-11-29T17:00:00.000Z', name: 'W2', time: '16:00:00' }]\r\n    // }\r\n    if (!appointments || (appointments && !Object.keys(appointments).length)) {\r\n      return null;\r\n    }\r\n    console.log('rendering appointments');\r\n\r\n    return Object.keys(appointments).map(appointmentDate => {\r\n      let appointmentsInDay = appointments[appointmentDate]\r\n\r\n      return (\r\n        <Tab.Pane key={appointmentDate} eventKey={appointmentDate}>\r\n          <div style={{ width: '100vh', maxHeight: '80vh', }}>\r\n            <div style={{ fontWeight: '600', marginBottom: 10, textAlign: 'center', fontSize: 20 }}>{appointmentDate}</div>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>Time</th>\r\n                  <th>Patient Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {appointmentsInDay.map(({ appointmentId, time, name }) => {\r\n                  let hours = parseInt(time.split(':')[0])\r\n                  let minutes = time.split(':')[1]\r\n                  let displayTime = hours > 12 ? `${hours - 12}:${minutes}` : `${hours}:${minutes}`\r\n                  return (\r\n                    <tr key={appointmentId}>\r\n                      <td>{displayTime}</td>\r\n                      <td>{name}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Tab.Pane>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderAppointmentsList() {\r\n    const { appointments, showAppointments } = this.context;\r\n    // let appointments = {\r\n    //   '2020-11-28':\r\n    //     [{ date: '2020-11-28T17:00:00.000Z', name: 'W3', time: '20:00:00' },\r\n    //     { date: '2020-11-28T17:00:00.000Z', name: 'W1', time: '08:00:00' }],\r\n    //   '2020-11-29': [{ date: '2020-11-29T17:00:00.000Z', name: 'W2', time: '16:00:00' }]\r\n    // }\r\n    console.log('appointments render:', appointments);\r\n\r\n    if (!appointments || (appointments && !Object.keys(appointments).length)) {\r\n      return null\r\n    }\r\n\r\n    return Object.keys(appointments).map(appointmentDate => {\r\n      return (\r\n        <ListGroup.Item key={appointmentDate} eventKey={appointmentDate} onClick={() => showAppointments()}>\r\n          {appointmentDate}\r\n        </ListGroup.Item>\r\n\r\n      );\r\n    });\r\n  }\r\n\r\n  renderPatientsList() {\r\n    const { chats, setActiveChat } = this.context;\r\n    if (!chats) {\r\n      return null\r\n    }\r\n    return chats.map(chat => {\r\n      return (\r\n        <ListGroup.Item key={chat.id} eventKey={chat.id} onClick={() => setActiveChat(chat.id)}>\r\n          {chat.patientName}\r\n        </ListGroup.Item>\r\n\r\n      );\r\n    });\r\n  }\r\n\r\n  setActiveList = (type) => {\r\n    this.setState({\r\n      activeList: type,\r\n    })\r\n\r\n  }\r\n\r\n  closeWindows = () => {\r\n    this.setState({\r\n      activeAppointment: '',\r\n    })\r\n    this.context.setActiveChat('')\r\n    this.context.hidePatient();\r\n    this.context.hideAppointments();\r\n  }\r\n\r\n  renderListHeader() {\r\n    let { activeList } = this.state;\r\n    let patientsStyle, appointmentStyle;\r\n    if (activeList == 'appointments') {\r\n      patientsStyle = 'dark'\r\n      appointmentStyle = 'primary'\r\n    } else {\r\n      patientsStyle = 'primary'\r\n      appointmentStyle = 'dark'\r\n    }\r\n    return (\r\n      <div style={{\r\n        display: 'block',\r\n        backgroundColor: 'white',\r\n        textAlign: 'center',\r\n        padding: 10\r\n      }}>\r\n        <Button variant={patientsStyle} onClick={() => this.setActiveList('patients')} style={{ marginRight: 5 }}>المحادثات</Button>\r\n        <Button variant={appointmentStyle} onClick={() => this.setActiveList('appointments')} >المواعيد</Button>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderCircle() {\r\n    return (\r\n      <div style={styles.circle} onClick={() => this.closeWindows()}>\r\n        X\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderUpperTabs() {\r\n    const {chat, profile, educators} = this.state.lang.ar;\r\n    return (\r\n      <div >\r\n        <Tabs defaultActiveKey=\"chat\" id=\"noanim-tab-example\" mountOnEnter >\r\n          <Tab eventKey=\"chat\" title={chat}>\r\n            {this.renderChat()}\r\n          </Tab>\r\n          <Tab eventKey=\"profile\" title={profile}>\r\n            <PatientProfile />\r\n          </Tab>\r\n          <Tab eventKey=\"educators\" title={educators} >\r\n            <PatientEducators />\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let { activeList  } = this.state\r\n    let { patientsVisible, appointmentsVisible, educatorsVisible , activeChat } = this.context\r\n\r\n    return (\r\n      <>\r\n        <MyNav />\r\n        <Container\r\n          fluid\r\n          style={styles.container}>\r\n          <CardContainer width=\"80%\" direction=\"row\" padding={10} marginT={40} marginB={40}>\r\n            <Tab.Container >\r\n              <div className=\"left-col\">\r\n                {this.renderListHeader()}\r\n                {activeList == 'appointments' ?\r\n                  <ListGroup >{this.renderAppointmentsList()}</ListGroup>\r\n                  : <ListGroup >{this.renderPatientsList()}</ListGroup>\r\n                }\r\n              </div>\r\n              <div className=\"right-col\">\r\n\r\n                <Tab.Content style={{ width: '100%', height: '100%', overflow: 'hidden' }}>\r\n                  {this.renderCircle()}\r\n                  {activeList == 'appointments' && appointmentsVisible ?\r\n                    this.renderAppointments()\r\n                    : activeChat ?\r\n                      this.renderUpperTabs()\r\n                      : null\r\n                  }\r\n                </Tab.Content>\r\n              </div>\r\n            </Tab.Container>\r\n          </CardContainer>\r\n        </Container>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ShowPatientsView;\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#0a122a\"\r\n  },\r\n  circle: {\r\n    width: 30,\r\n    height: 30,\r\n    borderWidth: 0,\r\n    textAlign: 'center',\r\n    borderStyle: 'solid',\r\n    borderColor: '#000',\r\n    color: '#000',\r\n    borderRadius: 80,\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    right: 20,\r\n    top: 20,\r\n    boxShadow: \"0px 2px 5px 4px rgba(0,0,0,0.1)\"\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport './scss/app.scss'\r\nimport {DataProvider} from './stateManagement/context'\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport LoginView from './views/LoginView'\r\nimport ShowPatientsView from './views/ShowPatientsView'\r\n\r\nfunction App() {\r\n  return (\r\n    <DataProvider>\r\n      <Router>\r\n       \r\n\r\n     \r\n      \r\n        <Switch>\r\n        <Route exact path=\"/\" component={LoginView} />\r\n        {/* <Redirect from=\"/educator-webapp\" exact to=\"/\" /> */}\r\n        {/* <Route exact path=\"/\" component={ShowPatientsView} /> */}\r\n        <Route exact path=\"/showpatients\" component={ShowPatientsView} />\r\n        </Switch>\r\n      </Router>\r\n   \r\n    </DataProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/ithnain.287167eb.png\";"],"sourceRoot":""}