{"version":3,"sources":["config/apiConfig.js","helpers/Converters.js","API/apiEducator.js","stateManagement/context.js","components/CardContainer.js","API/apiAuth.js","views/LoginView.js","components/MyNav.js","components/Footer.js","components/Chat.js","views/PatientProfile.js","views/PatientEducators.js","views/ShowPatientsView.js","App.js","serviceWorker.js","index.js","assets/ithnain.png"],"names":["apiUrl","parseArray","arr","map","element","JSON","parse","parseObjectOfArrays","obj","parsed","objects","key","current","Array","isArray","push","getMessages","chatId","educatorId","token","a","axios","get","url","headers","Authorization","timeout","result","data","getEducatorIds","educators","forEach","educator","name","id","console","log","getEducatorChats","i","getChats","chats","count","length","error","item","getAllEducatorsAndPatients","patients","getEducatorData","appointments","chat","patient","patientId","parsedData","getPatient","unparsedPatient","patientProfile","DataContext","React","createContext","DataProvider","props","saveData","filterAppointments","localStorage","setItem","setState","setEducatorId","saveToken","getLocalData","Promise","resolve","reject","getItem","clearState","clear","activeChat","loading","patientsVisible","appointmentsVisible","educatorsVisible","state","setActiveEducator","setChats","showPatient","hidePatient","showAppointments","hideAppointments","showEducators","hideEducators","setActiveChat","this","output","app","appointmentDate","date","split","Provider","value","children","Component","Consumer","CardContainer","Card","style","width","flexDirection","direction","backgroundColor","padding","marginBottom","marginB","marginTop","marginT","borderRadius","login","username","password","text","sha256","encryptedPassword","post","Login","handleChange","e","target","onSubmit","then","res","tokens","context","history","catch","err","Container","fluid","display","justifyContent","alignItems","height","Row","Col","sm","lg","src","logo","Form","Group","controlId","Label","Control","type","placeholder","onChange","Spinner","alignSelf","animation","Button","variant","onClick","contextType","MyNav","useContext","Navbar","bg","collapseOnSelect","expand","Brand","alt","className","Toggle","aria-controls","Collapse","Object","keys","Nav","Link","color","to","Footer","fileTypes","audioTypes","Chat","messages","duration","lang","ar","messageCount","usageDuration","messagesEnd","createRef","scrollToBottom","scrollIntoView","behavior","formatMessages","reverse","setDuration","first","Date","message","createdOn","last","diffTime","Math","abs","ceil","formatedMessages","parseInt","user","_id","media","fileNameArr","fileExtension","isImg","includes","isFile","isAudio","image","file","replace","audio","userId","formattedMessage","previousState","append","dateObject","getHours","getMinutes","getMonth","getDate","position","content","ImageContent","model","sentTime","CustomContent","fontSize","defaultProfile","dateAffected","dateBirth","weight","hba1c","medications","patientName","notes","disease","sex","whoIsPatient","surgery","otherDisease","diet","dateAffectedText","dateBirthText","dietText","diseaseText","weightText","heightText","Hba1CText","medicinesText","sexText","surgeryText","otherDiseaseText","whoIsPatientText","outSideLinkText","topicsText","saveText","PatientProfile","useState","setLoading","setPatientId","setCurrentChat","setPatientProfile","medicalProfile","getPatientAction","useCallback","patientData","useEffect","find","c","weights","heights","hba1cs","medicines","diseaseType","outSideLink","topics","hba1cPopover","Popover","Title","as","Content","border","textAlign","weightsPopover","heightsPopover","medicinesPopover","medicine","topicsPopover","topic","Tab","Pane","eventKey","maxHeight","overflowY","overflowX","column","defaultValue","OverlayTrigger","trigger","placement","overlay","marginLeft","PatientEducators","ListGroup","Item","active","ShowPatientsView","activeList","profile","setActiveList","closeWindows","activeAppointment","goBack","paths","appointmentsInDay","fontWeight","Table","striped","bordered","hover","appointmentId","time","hours","minutes","displayTime","patientsStyle","appointmentStyle","marginRight","styles","circle","Tabs","defaultActiveKey","mountOnEnter","title","renderChat","container","renderListHeader","renderAppointmentsList","renderPatientsList","overflow","renderCircle","renderAppointments","renderUpperTabs","borderWidth","borderStyle","borderColor","right","top","boxShadow","App","exact","path","component","LoginView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.fa887c3f.chunk.js","sourcesContent":["let apiUrl = 'https://api.ithnain.com'\r\n// let apiUrl= 'http://ec2-157-175-56-64.me-south-1.compute.amazonaws.com:3002'\r\n// let apiUrl = 'http://cors-anywhere.herokuapp.com/https://ithnain-test-backend.herokuapp.com'\r\n\r\n// let apiUrl= 'http://192.168.8.109:3000'\r\n// let apiUrl= 'http://192.168.8.106:3000'\r\n// let apiUrl= 'http://157.175.113.31:3000'\r\n// const expressPort = 3000\r\n// const apiUrls = {\r\n//   production: 'Production URL',\r\n//   development: `http://localhost:${expressPort}`\r\n// }\r\n\r\n// if (window.location.hostname === 'localhost') {\r\n//   apiUrl = apiUrls.development\r\n// } else {\r\n//   apiUrl = apiUrls.production\r\n// }\r\n\r\nexport default apiUrl","export function parseArray(arr){\r\n    return arr.map((element) => { return JSON.parse(element) })\r\n}\r\n\r\nexport function parseObjectOfArrays(obj){\r\n    let parsed=[]\r\n    let objects={}\r\n    for(var key in obj){\r\n        var current=obj[key]\r\n        if (Array.isArray(current)) {\r\n            objects[key]= parseArray(current)\r\n            parsed.push(parseArray(current))\r\n        }\r\n    }\r\n    return objects\r\n}","import url from '../config/apiConfig'\r\nimport { parseObjectOfArrays } from '../helpers/Converters'\r\nimport axios from \"axios\"\r\n\r\nexport const getMessages = async (chatId, educatorId, token) => {\r\n  try {\r\n    let result = await axios\r\n        .get(`${url}/message?chatId=${chatId}&educatorId=${educatorId}`, {headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }, timeout: 10000 })\r\n    if (result?.data) {\r\n      return result.data\r\n    }\r\n  } catch (error) {\r\n      return error\r\n  }\r\n}\r\n\r\nexport const getEducatorIds = async (educatorId, token) => {\r\n  try {\r\n\r\n    const result = await axios.get(`${url}/educator?get=all&id=${educatorId}&educatorId=${educatorId}`, {headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }})\r\n    if (result.data) {\r\n      let educators = {}\r\n      result.data.forEach((educator) => {\r\n        let { name, id } = JSON.parse(educator)\r\n        educators[id] = { name, id }\r\n      })\r\n      return educators;\r\n    }\r\n  } catch(err) {\r\n    console.log('Error getEducatorIds', err);\r\n  }\r\n}\r\n\r\nexport const getEducatorChats = async (educatorId, token) => {\r\n  const educators = await getEducatorIds(educatorId, token);\r\n  let patientChats = []\r\n  for (var i in educators) {\r\n    let chats = await getChats(educators[i].id, token)\r\n    if (chats) {\r\n      educators[i].chats = chats\r\n      educators[i].count = chats.length\r\n    }\r\n  }\r\n  return educators;\r\n}\r\n\r\nexport const getChats = async (educatorId, token) => {\r\n  try {\r\n    const filterDate = 'all';\r\n    const result = await axios.get(`${url}/chat?educatorId=${educatorId}&filterDate=${filterDate}`, {headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }})\r\n    if(result.data) {\r\n      if (result.data.error) {\r\n        return;\r\n      }\r\n      let chats = result.data?.chats?.map((item) => JSON.parse(item))\r\n      if(!chats) {\r\n        return []\r\n      }\r\n      return chats\r\n    }\r\n  } catch (error) {\r\n    console.log(\"Error getting chats:\", error);\r\n  }\r\n}\r\n\r\nexport const getAllEducatorsAndPatients = async (educatorId, token) => {\r\n  try {\r\n    const educators = await getEducatorIds(educatorId, token);\r\n    let patients = {}\r\n    for (var i in educators) {\r\n      let educator = educators[i]\r\n      let {chats, appointments}= await getEducatorData(educator.id, token)\r\n\r\n      if (chats) {\r\n        educator.chats = chats\r\n        educator.count = chats.length\r\n        chats.forEach((chat) => {\r\n          let patient = patients[chat.patientId]\r\n          if (!patient) {\r\n            patients[chat.patientId] = chat\r\n            patient= patients[chat.patientId]\r\n          }\r\n          if (patient && patient.educators) {\r\n            patient.educators.push({id: educator.id, name: educator.name})\r\n          }\r\n          else {\r\n            patient.educators = [{id: educator.id, name: educator.name}]\r\n          }\r\n        })\r\n        // break;\r\n\r\n      }\r\n      if (appointments) {\r\n        educators[i].appointments = appointments\r\n      }\r\n    // }\r\n    }\r\n\r\n    return {educators, patients};\r\n  }\r\n  catch (error) {\r\n    console.log(' Error getAllEducatorsAndPatients', error);\r\n  }\r\n}\r\n\r\n\r\nexport const getEducatorData = async (educatorId, token) => {\r\n  try {\r\n    const get = 'chats,appointments,educator,all';\r\n    const result = await axios.get(`${url}/educator?id=${educatorId}&get=${get}&educatorId=${educatorId}`, {headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }})\r\n    if(result.data) {\r\n      const {data} = result;\r\n      delete data.educator\r\n      let parsedData = parseObjectOfArrays(data);\r\n      const { appointments, chats } = parsedData;\r\n      return { chats, appointments };\r\n    }\r\n  } catch (error) {\r\n    console.log('getEducatorData Error', error);\r\n  }\r\n}\r\n\r\nexport const getPatient = async (educatorId, token, patientId) => {\r\n  try {\r\n    const result = await axios.get(`${url}/patient?patientId=${patientId}&educatorId=${educatorId}`, {headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }})\r\n    if(result.data) {\r\n      const {patient: unparsedPatient, patientProfile} = result.data;\r\n        const patient = JSON.parse(unparsedPatient);\r\n        return {patient, patientProfile};\r\n    }\r\n  } catch (error) {\r\n    console.log('getPatient Error', error);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { getEducatorChats, getAllEducatorsAndPatients, getPatient } from '../API/apiEducator'\r\n\r\nconst DataContext = React.createContext();\r\nclass DataProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      educatorId: '',\r\n      token: '',\r\n      activeChat: '',\r\n      loading: false,\r\n      patientsVisible: false,\r\n      appointmentsVisible: true,\r\n      educatorsVisible: false,\r\n      appointments: {},\r\n      educators: {},\r\n      patients: {},\r\n      chats: []\r\n    };\r\n  }\r\n\r\n\r\n  saveData = (educatorId, appointments, chats) => {\r\n    appointments = this.filterAppointments(appointments)\r\n    localStorage.setItem('educatorId', educatorId)\r\n    this.setState({ educatorId, appointments, chats })\r\n    // if (educatorId === '540d2ebd-bca2-4934-98b9-87ec4a592592')\r\n    console.log('educatorId', educatorId);\r\n    if (educatorId == '55aabda5-8af2-4a39-b074-80a1852dcb1d')\r\n      this.getEducatorData();\r\n\r\n  }\r\n\r\n  setEducatorId = (educatorId) => this.setState({educatorId});\r\n\r\n  saveToken = (token) => {\r\n    this.setState({token});\r\n    localStorage.setItem('token', token);\r\n  }\r\n  componentDidMount() {\r\n    this.getLocalData();\r\n  }\r\n  // componentDidMount() {\r\n  //   this.getEducatorData(this.state.token);  \r\n  // }\r\n\r\n  getLocalData = async () => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const educatorId= localStorage.getItem('educatorId')\r\n      const token = localStorage.getItem('token')\r\n      if (educatorId && token) {\r\n        this.saveToken(token)\r\n        this.setEducatorId(educatorId)\r\n        resolve({educatorId, token})\r\n      } else {\r\n        reject('no educatorId or token set')\r\n      }\r\n    })\r\n  }\r\n\r\n  clearState = () => {\r\n    localStorage.clear();\r\n    this.setState({\r\n            // educatorId: '',\r\n            educatorId: '',\r\n            token: '',\r\n            activeChat: '',\r\n            loading: false,\r\n            patientsVisible: false,\r\n            appointmentsVisible: true,\r\n            educatorsVisible: false,\r\n            appointments: {},\r\n            educators: {},\r\n            patients: {},\r\n            chats: []\r\n    })\r\n  }\r\n\r\n  filterAppointments(appointments) {\r\n\r\n    if (appointments) {\r\n      let output = {}\r\n      appointments.forEach(app => {\r\n        if (typeof app == 'string') {\r\n          app = JSON.parse(app)\r\n        }\r\n        var appointmentDate = app.date.split('T')[0]\r\n        //if there is no array with this Date key, make one and add to it the appointment\r\n        if (!output[appointmentDate]) {\r\n          output[appointmentDate] = [app]\r\n        }\r\n        else {\r\n          //if it already exists, push to it the appointment\r\n          output[appointmentDate].push(app)\r\n        }\r\n      })\r\n\r\n      return output\r\n    }\r\n    return appointments\r\n  }\r\n\r\n\r\n  getEducatorChats = async () => {\r\n    this.setState({ loading: true })\r\n    const {token, educatorId} = this.state;\r\n    let educators = await getEducatorChats(educatorId, token);\r\n    if (educators) {\r\n      this.setState({ educators, loading: false })\r\n      return educators\r\n    }\r\n    else {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  getEducatorData = async () => {\r\n    this.setState({ loading: true });\r\n    const {token, educatorId} = this.state;\r\n    let {educators, patients} = await getAllEducatorsAndPatients(educatorId, token);\r\n    if (educators && patients) {\r\n      this.setState({ educators, patients, loading: false })\r\n      return educators\r\n    }\r\n    else if (educators) {\r\n      this.setState({ educators, loading: false })\r\n      return educators\r\n    }\r\n    else {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  getPatient = async (patientId) => {\r\n    const {token, educatorId} = this.state;\r\n    const data = await getPatient(educatorId, token, patientId)\r\n    return data;\r\n  }\r\n\r\n  setActiveEducator = educatorId => {\r\n    let appointments = this.filterAppointments(this.state.educators[educatorId].appointments)\r\n\r\n    this.setState({\r\n      educatorId,\r\n      chats: this.state.educators[educatorId].chats,\r\n      appointments\r\n    })\r\n\r\n  }\r\n  setChats = chats => this.setState({ chats })\r\n  showPatient = () => this.setState({ patientsVisible: true })\r\n  hidePatient = () => this.setState({ patientsVisible: false })\r\n  showAppointments = () => this.setState({ appointmentsVisible: true })\r\n  hideAppointments = () => this.setState({ appointmentsVisible: false })\r\n  showEducators = () => this.setState({ educatorsVisible: true, patientsVisible: false })\r\n  hideEducators = () => this.setState({ educatorsVisible: false, patientsVisible: true })\r\n  setActiveChat = chatId => this.setState({ activeChat: chatId })\r\n  render() {\r\n\r\n    return (\r\n      <DataContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          saveData: this.saveData,\r\n          saveToken: this.saveToken,\r\n          clearState: this.clearState,\r\n          getEducatorChats: this.getEducatorChats,\r\n          setEducatorId: this.setEducatorId,\r\n          setActiveEducator: this.setActiveEducator,\r\n          setChats: this.setChats,\r\n          showPatient: this.showPatient,\r\n          hidePatient: this.hidePatient,\r\n          showAppointments: this.showAppointments,\r\n          hideAppointments: this.hideAppointments,\r\n          showEducators: this.showEducators,\r\n          hideEducators: this.hideEducators,\r\n          setActiveChat: this.setActiveChat,\r\n          getLocalData: this.getLocalData,\r\n          getPatient: this.getPatient,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </DataContext.Provider>\r\n    );\r\n  }\r\n}\r\nconst DataConsumer = DataContext.Consumer;\r\n\r\nexport { DataProvider, DataConsumer, DataContext };\r\n\r\n","import React, { Component } from \"react\";\r\nimport {Card,} from 'react-bootstrap'\r\n\r\nclass CardContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Card  style={{ width: this.props.width, \r\n       \r\n    //   padding: \"2%\",\r\n     flexDirection: this.props.direction,\r\n      backgroundColor: \"rgba(247,247,247,1)\",\r\n      padding: this.props.padding,\r\n      marginBottom: this.props.marginB,\r\n      marginTop: this.props.marginT,\r\n      borderRadius: 25\r\n    //   boxShadow: '1px 3px 5px rgba(255,255,255,0.9)' \r\n      }}>\r\n            {this.props.children}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardContainer;\r\n","import axios from \"axios\"\r\nimport url from '../config/apiConfig'\r\nimport { sha256 } from 'js-sha256';\r\n\r\nconst encrypt = (text) => {\r\n    return sha256(text);\r\n}\r\n\r\nexport const login = async ({ username, password }) => {\r\n    let encryptedPassword = await encrypt(password);\r\n    \r\n    const data = {\r\n        id: username,\r\n        password: encryptedPassword\r\n    }\r\n    return axios.post(`${url}/login`, data)\r\n}\r\n","import React from \"react\";\r\nimport { Button, Form, Row, Col, Container, Spinner } from \"react-bootstrap\";\r\nimport CardContainer from \"../components/CardContainer\";\r\nimport logo from \"../assets/ithnain.png\";\r\nimport { login } from '../API/apiAuth'\r\nimport { DataContext } from '../stateManagement/context'\r\n\r\nclass Login extends React.Component {\r\n\r\n  static contextType = DataContext;\r\n\r\n\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    loading: false,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const data = await this.context.getLocalData();\r\n      if(data?.token && data?.educatorId) {\r\n        this.context.getEducatorChats()\r\n        this.props.history.push(\"showpatients\")\r\n      }\r\n    } catch (err) {\r\n      console.log('context not loaded');\r\n    }\r\n    \r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit = () => {    \r\n    this.setState({ loading: true })\r\n    login(this.state)\r\n      .then(res => {\r\n        const educator = JSON.parse(res.data.educator)\r\n        const tokens = educator.token;\r\n        const token= tokens[tokens.length -1];\r\n        const {educatorId, appointments, chats} = res.data;\r\n        this.setState({ loading: false })\r\n        this.context.saveToken(token);\r\n        this.context.saveData(educatorId, appointments, chats)\r\n        this.props.history.push(\"showpatients\")\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        this.setState({ loading: false })\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { username, password, loading} = this.state;\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100vh\",\r\n          backgroundColor: \"#0a122a\"\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col\r\n            sm={12}\r\n            lg={4}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <img src={logo} style={{ width: \"50%\", marginBottom: \"4%\" }} />\r\n          </Col>\r\n          <Col\r\n            sm={12}\r\n            lg={6}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <CardContainer width=\"80%\" padding={30}>\r\n              <Form style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter username\"\r\n                    value={username}\r\n                    name={\"username\"}\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    name={\"password\"}\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                </Form.Group>\r\n                {loading? <Spinner style={{alignSelf:'center', marginBottom: 10}} animation=\"border\" /> : null}\r\n                <Button variant=\"primary\" onClick={this.onSubmit}>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </CardContainer>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component, useContext } from \"react\";\r\nimport logo from '../assets/ithnain.png'\r\nimport { Navbar, Spinner, Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {DataContext} from '../stateManagement/context'\r\n\r\nconst MyNav = (props) => {\r\n\r\n  const {educators, setActiveEducator, loading, clearState}= useContext(DataContext)\r\n\r\n  return (\r\n    <Navbar bg=\"secondary\" variant=\"dark\" collapseOnSelect expand=\"lg\">\r\n      <Navbar.Brand >\r\n        <img\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"80\"\r\n          height=\"40\"\r\n          className=\"d-inline-block align-top\"\r\n        />{\" \"}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        {Object.keys(educators).length ?\r\n          <>\r\n          {Object.keys(educators).map((i) => (\r\n            <Nav.Link key={educators[i].id} style={{ color: \"#FFF\" }} onClick={()=>setActiveEducator(educators[i].id)} >{educators[i].name}</Nav.Link>\r\n          ))}\r\n          <Nav className=\"mr-auto ml-10\">\r\n            {/* <Nav.Link ><Link style={{ color: \"#FFF\" }} to=\"/\">Home</Link> </Nav.Link> */}\r\n            <Nav.Link ><Link style={{ color: \"#FFF\" }} to=\"/\" onClick={()=> clearState()}>Logout</Link></Nav.Link>\r\n          </Nav>\r\n          </>\r\n          : loading? \r\n          <Spinner animation=\"border\" />\r\n          : <Nav className=\"mr-auto\">\r\n            {/* <Nav.Link ><Link style={{ color: \"#FFF\" }} to=\"/\">Home</Link> </Nav.Link> */}\r\n            <Nav.Link ><Link style={{ color: \"#FFF\" }} to=\"/\" onClick={()=> clearState()}>Logout</Link></Nav.Link>\r\n          </Nav>\r\n        }\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n\r\n}\r\n\r\nexport default MyNav;\r\n","import React from \"react\";\r\nimport logo from \"../assets/ithnain.png\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar\r\n      bg=\"secondary\"\r\n      variant=\"dark\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        \r\n      }}\r\n    >\r\n      <img\r\n        alt=\"\"\r\n        src={logo}\r\n        width=\"100\"\r\n        height=\"50\"\r\n        className=\"d-inline-block align-top\"\r\n      />\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React,{Text} from 'react';\r\nimport { ChatFeed, ChatBubble } from 'react-chat-ui';\r\nimport { Container, Spinner } from 'react-bootstrap';\r\nimport { getMessages } from '../API/apiEducator';\r\nimport styles from '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\r\nimport {\r\n  MainContainer,\r\n  ChatContainer,\r\n  MessageList,\r\n  Message,\r\n  MessageInput,\r\n  MessageSeparator\r\n} from '@chatscope/chat-ui-kit-react';\r\n\r\nconst imgTypes = ['png', 'jpg', 'jpeg', 'gif'];\r\nconst fileTypes = ['pdf', 'doc', 'docx'];\r\nconst audioTypes = ['mp3', '3gp', 'caf', 'wav', 'wave', 'm4a'];\r\n\r\nclass Chat extends React.Component {\r\n  state = {\r\n    messages: [],\r\n    duration: 0,\r\n    lang: {\r\n      ar: {\r\n        messageCount: 'عدد الرسائل',\r\n        usageDuration: 'مدة الاستخدام',\r\n      },\r\n    },\r\n  };\r\n\r\n  messagesEnd = React.createRef();\r\n  async componentDidMount() {\r\n    let chatId = '1234';\r\n    this.setState({ loading: true });\r\n    await getMessages(\r\n      this.props.chatId,\r\n      this.props.educatorId,\r\n      this.props.token\r\n    )\r\n      .then((data) => {\r\n        if (data) {\r\n          let messages = this.formatMessages(data.reverse());\r\n          this.setDuration(messages);\r\n          this.setState({ messages, loading: false });\r\n        } else {\r\n          this.setState({ loading: false });\r\n          return [];\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ loading: false });\r\n        console.log('ERROR GETTING MESSAGES', err);\r\n      });\r\n  }\r\n\r\n  setDuration(messages = []) {\r\n    if (messages && messages.length > 0) {\r\n      let first = new Date(messages[0].message.createdOn);\r\n      let last = new Date(messages[messages.length - 1].message.createdOn);\r\n      const diffTime = Math.abs(last - first);\r\n      const duration = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      this.setState({ duration });\r\n    }\r\n  }\r\n\r\n  formatMessages(messages = []) {\r\n    let formatedMessages = [];\r\n    let date\r\n    for (var i in messages) {\r\n      let message = messages[i];\r\n      let id = parseInt(message.user._id) - 1;\r\n      if (message.media) {\r\n        var fileNameArr = message.media.split('.');\r\n        var fileExtension = fileNameArr[fileNameArr.length - 1];\r\n        var isImg = fileExtension.includes('jpg');\r\n        var isFile = fileTypes.includes(fileExtension);\r\n        var isAudio = audioTypes.includes(fileExtension);\r\n        if (isImg) {\r\n        \r\n        if(date !== message.createdOn.split('T')[0]){\r\n          message.message = { image: message.media };\r\n          message.message.date = message.createdOn.split('T')[0]\r\n          date = message.createdOn.split('T')[0]\r\n        }else{\r\n          message.message = { text: message.text };\r\n        }\r\n        delete message.media;\r\n        } else if (isFile) {\r\n          message.message = { text: message.text, file: message.media };\r\n          delete message.media;\r\n        } else if (isAudio) {\r\n          \r\n          message.media = message.media.replace('vnd.wave', 'wav');\r\n          message.message = { audio: message.media };\r\n          delete message.media;\r\n        } else {\r\n          message.message = { text: '' };\r\n        }\r\n      } else if (message.text) {\r\n        \r\n        if(date !== message.createdOn.split('T')[0]){\r\n          message.message = { text: message.text };\r\n          message.message.date = message.createdOn.split('T')[0]\r\n          date = message.createdOn.split('T')[0]\r\n        }\r\n        else\r\n        message.message = { text: message.text };\r\n      } else {\r\n        message.message = { text: '' };\r\n      }\r\n      message.message.createdOn = message.createdOn;\r\n      let userId;\r\n      if (id === 0) userId = 'outgoing';\r\n      else userId = 'incoming';\r\n      const createdOn = message.message.createdOn.split('T')\r\n      message.message.createdOn = createdOn\r\n      let formattedMessage = { userId, message: message.message };\r\n\r\n      formatedMessages.push(formattedMessage);\r\n    }\r\n    return formatedMessages;\r\n  }\r\n\r\n  onSend(messages = []) {\r\n    this.setState((previousState) => ({\r\n      messages: previousState.messages.append(messages),\r\n    }));\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n  getTimeStamp(dateObject) {\r\n    let date = new Date(dateObject);\r\n    return `${date.getHours()}:${date.getMinutes()} - ${\r\n      date.getMonth() + 1\r\n    }/${date.getDate()}`;\r\n  }\r\n  render() {\r\n    const { loading, messages, duration } = this.state;\r\n    const { messageCount, usageDuration } = this.state.lang.ar;\r\n    return (\r\n      <div>\r\n        {loading ? (\r\n          <Spinner animation=\"border\" />\r\n        ) : !messages.length ? (\r\n          <div>المحادثة فارغة </div>\r\n        ) : null}\r\n        <div>\r\n          {messages.length} :{messageCount} <br />\r\n          {usageDuration}: {duration} {'يوم'}\r\n        </div>\r\n        <div style={{ position: 'relative', height: '750px' }}>\r\n          <MainContainer>\r\n            <ChatContainer>\r\n              <MessageList>\r\n                {messages.map((message) =>(\r\n                  <div>\r\n\r\n                    {message.message?.date && (<MessageSeparator content={message.message.date} />)}\r\n                    \r\n                  {message.message?.image ? (\r\n                    <Message.ImageContent\r\n                      src={message.message.image}\r\n                      alt={\r\n                        \"The image isn't working link: \" +\r\n                        message.message.image\r\n                      }\r\n                      width={400}\r\n                    />\r\n                  ) : (\r\n                    <Message\r\n                      model={{\r\n                        message: message.message.text,\r\n                        sentTime: message.message.createdOn,\r\n                        direction: message.userId,\r\n                      }}\r\n                    >\r\n                      <Message.CustomContent>\r\n                      <text style={{fontSize:17}}>{message.message.text}</text>\r\n                      </Message.CustomContent>\r\n                      <Message.Footer>\r\n                    <text style={{fontSize:10}}>{message.message.createdOn[1].split('.')[0]}</text>\r\n                      </Message.Footer>\r\n                    </Message>)}\r\n                  </div>\r\n                \r\n                  )\r\n                )}\r\n              </MessageList>\r\n            </ChatContainer>\r\n          </MainContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { Tab, Col, OverlayTrigger, Popover, Form, Button, Spinner, Row } from 'react-bootstrap'\r\nimport { DataContext } from \"../stateManagement/context\";\r\n\r\n/*\r\ncanBookAppointment: false\r\nchallenge: \"\"\r\ncreatedOn: \"2021-03-28T14:57:37.289Z\"\r\ndateAffected: null\r\ndateBirth: null\r\ndiet: null\r\ndiseaseId: \"7a365d41-2c88-494d-98dd-f52da0a2a28e\"\r\ndiseaseType: \"T1D\"\r\nhba1cs: [\r\n  {hba1c: '5'},\r\n  {hba1c: '5.5'},\r\n  {hba1c: '10.0'}\r\n]\r\nheight: null\r\ninfoNeeded: null\r\nmedicines: []\r\nneedPayment: null\r\nnotes: []\r\notherDisease: null\r\noutSideLink: null\r\npatientId: \"92dbbccb-a9c7-4c9f-b696-26b69eaaff77\"\r\npatientProfilesId: \"5d059d12-323a-4d39-8d83-22a58995c6f3\"\r\nrealPatientName: null\r\nsex: null\r\nsubType: null\r\nsummaries: []\r\nsurgery: null\r\ntopics: null\r\nweights: []\r\nwhoIsPatient: \"Patient\"\r\n*/\r\n\r\nconst defaultProfile = {\r\n  dateAffected: '',\r\n  dateBirth: '',\r\n  weight: '',\r\n  height: '',\r\n  hba1c: '',\r\n  medications: '',\r\n  patientName: '',\r\n  notes: '',\r\n  disease: '',\r\n  sex: '',\r\n  whoIsPatient: '',\r\n  surgery: '',\r\n  otherDisease: '',\r\n  diet: '',\r\n}\r\n\r\nconst lang = {\r\n  ar: {\r\n    dateAffectedText: 'مصاب منذ',\r\n    dateBirthText: 'سنة الميلاد',\r\n    dietText: 'النظام الغذائي المتبع',\r\n    diseaseText: 'المرض',\r\n    weightText: 'الوزن',\r\n    heightText: 'الطول',\r\n    Hba1CText: 'Hba1C',\r\n    medicinesText: 'الأدوية',\r\n    sexText: 'الجنس',\r\n    surgeryText: 'العمليات الجراحية',\r\n    otherDiseaseText: 'الأمراض الأخرى',\r\n    whoIsPatientText: 'من المتلقي؟',\r\n    outSideLinkText: 'رابط ملف خارجي',\r\n    topicsText: 'المواضيع',\r\n    saveText: 'حفظ'\r\n\r\n  }\r\n}\r\n\r\n\r\nconst PatientProfile = () => {\r\n  let { chats, hidePatient, showEducators, activeChat, getPatient } = useContext(DataContext)\r\n  const [loading, setLoading] = useState(false);\r\n  const [patientId, setPatientId] = useState('');\r\n  const [currentChat, setCurrentChat] = useState({});\r\n  const [patientProfile, setPatientProfile] = useState(defaultProfile);\r\n  const [editPatient, setEditPatient] = useState({\r\n    medicalProfile: {\r\n      ...defaultProfile\r\n    }\r\n  });\r\n\r\n  // componentDidMount(){\r\n  //   // call a get for patient profile??\r\n  //   // then set it\r\n  // }\r\n  const getPatientAction = useCallback(async () => {\r\n    if (patientId) {\r\n      setLoading(true);\r\n      const patientData = await getPatient(patientId)\r\n      setLoading(false);\r\n      if (patientData?.patientProfile) {\r\n        setPatientProfile(patientData.patientProfile);\r\n        console.log(patientData.patientProfile);\r\n      }\r\n    }\r\n  }, [getPatient, patientId]);\r\n\r\n  useEffect(() => {\r\n    if (activeChat) {\r\n      const chat = chats?.find((c) => c.id === activeChat)\r\n      if (chat) {\r\n        setCurrentChat(chat);\r\n        setPatientId(chat?.patientId)\r\n        getPatientAction();\r\n      }\r\n    }\r\n  }, [activeChat, chats, getPatientAction]);\r\n\r\n  // useEffect(() => {\r\n  //   const profile = {\r\n  //     canBookAppointment: false,\r\n  //     challenge: \"\",\r\n  //     createdOn: \"2021-03-28T14:57:37.289Z\",\r\n  //     dateAffected: null,\r\n  //     dateBirth: null,\r\n  //     diet: null,\r\n  //     diseaseId: \"7a365d41-2c88-494d-98dd-f52da0a2a28e\",\r\n  //     diseaseType: \"T1D\",\r\n  //     hba1cs: [\r\n  //       { hba1c: '5' },\r\n  //       { hba1c: '5.5' },\r\n  //       { hba1c: '10.0' },\r\n  //     ],\r\n  //     height: null,\r\n  //     infoNeeded: null,\r\n  //     medicines: [],\r\n  //     needPayment: null,\r\n  //     notes: [],\r\n  //     otherDisease: null,\r\n  //     outSideLink: null,\r\n  //     patientId: \"92dbbccb-a9c7-4c9f-b696-26b69eaaff77\",\r\n  //     patientProfilesId: \"5d059d12-323a-4d39-8d83-22a58995c6f3\",\r\n  //     realPatientName: null,\r\n  //     sex: null,\r\n  //     subType: null,\r\n  //     summaries: [],\r\n  //     surgery: null,\r\n  //     topics: null,\r\n  //     weights: [],\r\n  //     whoIsPatient: \"Patient\",\r\n  //   }\r\n  //   setPatientProfile(profile);\r\n  // }, []);\r\n\r\n  // setEditPatient = prop => {\r\n  //   let { editPatient } = this.state;\r\n  //   editPatient.medicalProfile = { ...editPatient.medicalProfile, ...prop };\r\n  //   this.setState({\r\n  //     editPatient,\r\n  //   });\r\n  // };\r\n\r\n\r\n  if (!chats) {\r\n    return null\r\n  }\r\n  console.log('rendering profile');\r\n  const { dateAffectedText, dietText, dateBirthText, diseaseText, weightText, heightText, Hba1CText, medicinesText, sexText, surgeryText, otherDiseaseText, whoIsPatientText, outSideLinkText, topicsText, saveText } = lang.ar;\r\n  return chats.map(chat => {\r\n    // if (!chat.medicalProfile) {\r\n    //   chat.medicalProfile = defaultProfile\r\n    // }\r\n    let {\r\n      dateAffected,\r\n      dateBirth,\r\n      weights,\r\n      heights,\r\n      hba1cs,\r\n      medicines,\r\n      patientName,\r\n      notes,\r\n      diseaseType,\r\n      sex,\r\n      whoIsPatient,\r\n      surgery,\r\n      otherDisease,\r\n      diet,\r\n      outSideLink,\r\n      topics,\r\n    } = patientProfile;\r\n    console.log('patientName:', chat.patientName);\r\n\r\n    if (chat.id !== activeChat) {\r\n      return null;\r\n    }\r\n\r\n    const hba1cPopover = (\r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Title as=\"h3\">{Hba1CText}</Popover.Title>\r\n        <Popover.Content style={{width:'100%', padding: 0}}>\r\n          {hba1cs?.map((hba1c) => (\r\n            <div style={{border: '1px solid black', width: '100%', textAlign: 'center'}}>{hba1c?.hba1c}</div>\r\n          ))}\r\n        </Popover.Content>\r\n      </Popover>\r\n    );\r\n    const weightsPopover = (\r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Title as=\"h3\">{weightText}</Popover.Title>\r\n        <Popover.Content style={{width:'100%', padding: 0}}>\r\n          {weights?.map((weight) => (\r\n            <div style={{border: '1px solid black', width: '100%', textAlign: 'center'}}>{weight?.weight}</div>\r\n          ))}\r\n        </Popover.Content>\r\n      </Popover>\r\n    );\r\n    const heightsPopover = (\r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Title as=\"h3\">{heightText}</Popover.Title>\r\n        <Popover.Content style={{width:'100%', padding: 0}}>\r\n          {heights?.map((height) => (\r\n            <div style={{border: '1px solid black', width: '100%', textAlign: 'center'}}>{height?.height}</div>\r\n          ))}\r\n        </Popover.Content>\r\n      </Popover>\r\n    );\r\n    const medicinesPopover = (\r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Title as=\"h3\">{medicinesText}</Popover.Title>\r\n        <Popover.Content style={{width:'100%', padding: 0}}>\r\n          {medicines?.map((medicine) => (\r\n            <div style={{border: '1px solid black', width: '100%', textAlign: 'center'}}>{medicine?.medicine}</div>\r\n          ))}\r\n        </Popover.Content>\r\n      </Popover>\r\n    );\r\n    const topicsPopover = (\r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Title as=\"h3\">{topicsText}</Popover.Title>\r\n        <Popover.Content style={{width:'100%', padding: 0}}>\r\n          {topics?.map((topic) => (\r\n            <div style={{border: '1px solid black', width: '100%', textAlign: 'center'}}>{topic}</div>\r\n          ))}\r\n        </Popover.Content>\r\n      </Popover>\r\n    );\r\n\r\n    return (\r\n      <Tab.Pane key={chat.id} eventKey={chat.id}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          <h3>{chat.id}</h3>\r\n          {loading ? <Spinner animation=\"border\" /> : null}\r\n          <Form style={{ width: '100vh', maxHeight: '75vh', overflowY: 'scroll', overflowX: 'hidden' }}>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {diseaseText}\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={diseaseType} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {dateAffectedText}\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={dateAffected} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {Hba1CText}\r\n                  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={hba1cPopover}>\r\n                    <Button variant='link' style={{ padding: '2px 2px', alignSelf: 'center', marginLeft: 5, marginBottom: 3}}>{\">\"}</Button>\r\n                  </OverlayTrigger>\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={hba1cs ? hba1cs[0]?.hba1c : ''} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {dateBirthText}\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={dateBirth} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {sexText}\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={sex} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {whoIsPatientText}\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={whoIsPatient} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {medicinesText}\r\n                  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={medicinesPopover}>\r\n                    <Button variant='link' style={{ padding: '2px 2px', alignSelf: 'center', marginLeft: 5, marginBottom: 3}}>{\">\"}</Button>\r\n                  </OverlayTrigger>\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={medicines ? medicines[0]?.medicine : null} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {otherDiseaseText}\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={otherDisease} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {weightText}\r\n                  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={weightsPopover}>\r\n                    <Button variant='link' style={{ padding: '2px 2px', alignSelf: 'center', marginLeft: 5, marginBottom: 3}}>{\">\"}</Button>\r\n                  </OverlayTrigger>\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={weights ? weights[0]?.weight : ''} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {heightText}\r\n                  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={heightsPopover}>\r\n                    <Button variant='link' style={{ padding: '2px 2px', alignSelf: 'center', marginLeft: 5, marginBottom: 3}}>{\">\"}</Button>\r\n                  </OverlayTrigger>\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={heights ? heights[0]?.height : ''} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {dietText}\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={diet} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {surgeryText}\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={surgery} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {topicsText}\r\n                  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={topicsPopover}>\r\n                    <Button variant='link' style={{ padding: '2px 2px', alignSelf: 'center', marginLeft: 5, marginBottom: 3}}>{\">\"}</Button>\r\n                  </OverlayTrigger>\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={topics ? topics[0]?.text : ''} />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label column sm=\"10\">\r\n                  {outSideLinkText}\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control type=\"text\" defaultValue={outSideLink} />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* <Form.Group as={Row}>\r\n                <Form.Label column sm=\"10\">\r\n                  Notes\r\n              </Form.Label>\r\n                <Col sm=\"10\">\r\n                  <Form.Control as=\"textarea\" defaultValue={notes} />\r\n                </Col>\r\n              </Form.Group> */}\r\n          </Form>\r\n          {/* <Button variant=\"success\" onClick={() => console.log('clicked')}>{saveText}</Button> */}\r\n        </div>\r\n      </Tab.Pane>\r\n    );\r\n  });\r\n}\r\n\r\nexport default PatientProfile","import React, { useContext } from 'react'\r\nimport { DataContext } from \"../stateManagement/context\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  ListGroup,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Tab,\r\n  Nav,\r\n  Table,\r\n  Accordion,\r\n  Card,\r\n} from \"react-bootstrap\";\r\n\r\nconst PatientEducators = (props) => {\r\n  const context = useContext(DataContext)\r\n  let { chats, patients, hidePatient, showEducators, educatorId, activeChat } = context;\r\n  \r\n  if (!chats) {\r\n    return null\r\n  }\r\n  const chat = chats.find(c => c.id == activeChat)\r\n  // return chats.map(chat => {\r\n    if(!chat){\r\n      return null\r\n    }\r\n    let patient = patients[chat.patientId]\r\n    console.log('educators:', chat.id);\r\n\r\n    return (\r\n      <Tab.Pane key={chat.id} eventKey={chat.id}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n        <h3 style={{marginBottom: 10}}>المثقفين المتابعين</h3>\r\n          <ListGroup as=\"ul\">\r\n            {patient && patient.educators && patient.educators.reverse().map(educator => (\r\n              <ListGroup.Item as=\"li\" key={educator.id} active={educator.id == educatorId}>{educator.name}</ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </div>\r\n      </Tab.Pane>\r\n    )\r\n  // })\r\n}\r\n\r\nexport default PatientEducators","import React from \"react\";\r\nimport {\r\n  Button,\r\n  ListGroup,\r\n  Container,\r\n  Tab, Tabs,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport CardContainer from \"../components/CardContainer\";\r\nimport { DataContext } from \"../stateManagement/context\";\r\nimport { parseArray } from \"../helpers/Converters\";\r\n\r\nimport MyNav from \"../components/MyNav\";\r\nimport Footer from \"../components/Footer\";\r\nimport Chat from '../components/Chat';\r\nimport PatientProfile from './PatientProfile';\r\nimport PatientEducators from './PatientEducators';\r\n\r\nclass ShowPatientsView extends React.Component {\r\n  static contextType = DataContext;\r\n\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    activeList: '',\r\n    lang: {\r\n      ar: {\r\n        chat: 'المحادثة', \r\n        profile: 'البروفايل',\r\n        educators: 'المتابعين'\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (this.context.educatorId == \"\") {\r\n      this.props.history.goBack();\r\n      // console.log(this.props)\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let { chats, educators } = this.context\r\n    try {\r\n      if (this.context?.chats?.length && !this.context.chats[0].id) {\r\n        chats = parseArray(this.context.chats);\r\n        this.context.setChats(chats)\r\n      }\r\n\r\n      let paths = []\r\n      for (var i in educators) {\r\n        let educator = educators[i]\r\n        paths.push({})\r\n      }\r\n    } catch(err) {\r\n      console.log('error setting chats:', err);\r\n    }\r\n  }\r\n\r\n  renderChat() {\r\n    let { chats, showPatient, activeChat, token, educatorId } = this.context;\r\n    console.log('rendering chat', typeof chats, '\\nactivated', activeChat);\r\n\r\n    if (!chats) {\r\n      return null\r\n    }\r\n    return chats.map(chat => {\r\n      return (\r\n        <Tab.Pane key={chat.id} eventKey={chat.id} style={{ marginTop: 20 }}>\r\n          {/* <div>\r\n            <a style={{ color: '#3581b8' }} onClick={() => showPatient()}>مشاهدة البروفايل</a>\r\n          </div> */}\r\n          {activeChat == chat.id ?\r\n            <Chat chatId={chat.id} token={token} educatorId={educatorId} />\r\n            : null}\r\n        </Tab.Pane>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderAppointments() {\r\n    const { appointments } = this.context;\r\n    // let appointments = {\r\n    //   '2020-11-28':\r\n    //     [{ date: '2020-11-28T17:00:00.000Z', name: 'W3', time: '20:00:00' },\r\n    //     { date: '2020-11-28T17:00:00.000Z', name: 'W1', time: '08:00:00' }],\r\n    //   '2020-11-29': [{ date: '2020-11-29T17:00:00.000Z', name: 'W2', time: '16:00:00' }]\r\n    // }\r\n    if (!appointments || (appointments && !Object.keys(appointments).length)) {\r\n      return null;\r\n    }\r\n    console.log('rendering appointments');\r\n\r\n    return Object.keys(appointments).map(appointmentDate => {\r\n      let appointmentsInDay = appointments[appointmentDate]\r\n\r\n      return (\r\n        <Tab.Pane key={appointmentDate} eventKey={appointmentDate}>\r\n          <div style={{ width: '100vh', maxHeight: '80vh', }}>\r\n            <div style={{ fontWeight: '600', marginBottom: 10, textAlign: 'center', fontSize: 20 }}>{appointmentDate}</div>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>Time</th>\r\n                  <th>Patient Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {appointmentsInDay.map(({ appointmentId, time, name }) => {\r\n                  let hours = parseInt(time.split(':')[0])\r\n                  let minutes = time.split(':')[1]\r\n                  let displayTime = hours > 12 ? `${hours - 12}:${minutes}` : `${hours}:${minutes}`\r\n                  return (\r\n                    <tr key={appointmentId}>\r\n                      <td>{displayTime}</td>\r\n                      <td>{name}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Tab.Pane>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderAppointmentsList() {\r\n    const { appointments, showAppointments } = this.context;\r\n    // let appointments = {\r\n    //   '2020-11-28':\r\n    //     [{ date: '2020-11-28T17:00:00.000Z', name: 'W3', time: '20:00:00' },\r\n    //     { date: '2020-11-28T17:00:00.000Z', name: 'W1', time: '08:00:00' }],\r\n    //   '2020-11-29': [{ date: '2020-11-29T17:00:00.000Z', name: 'W2', time: '16:00:00' }]\r\n    // }\r\n    console.log('appointments render:', appointments);\r\n\r\n    if (!appointments || (appointments && !Object.keys(appointments).length)) {\r\n      return null\r\n    }\r\n\r\n    return Object.keys(appointments).map(appointmentDate => {\r\n      return (\r\n        <ListGroup.Item key={appointmentDate} eventKey={appointmentDate} onClick={() => showAppointments()}>\r\n          {appointmentDate}\r\n        </ListGroup.Item>\r\n\r\n      );\r\n    });\r\n  }\r\n\r\n  renderPatientsList() {\r\n    const { chats, setActiveChat } = this.context;\r\n    if (!chats) {\r\n      return null\r\n    }\r\n    return chats.map(chat => {\r\n      return (\r\n        <ListGroup.Item key={chat.id} eventKey={chat.id} onClick={() => setActiveChat(chat.id)}>\r\n          {chat.patientName}\r\n        </ListGroup.Item>\r\n\r\n      );\r\n    });\r\n  }\r\n\r\n  setActiveList = (type) => {\r\n    this.setState({\r\n      activeList: type,\r\n    })\r\n\r\n  }\r\n\r\n  closeWindows = () => {\r\n    this.setState({\r\n      activeAppointment: '',\r\n    })\r\n    this.context.setActiveChat('')\r\n    this.context.hidePatient();\r\n    this.context.hideAppointments();\r\n  }\r\n\r\n  renderListHeader() {\r\n    let { activeList } = this.state;\r\n    let patientsStyle, appointmentStyle;\r\n    if (activeList == 'appointments') {\r\n      patientsStyle = 'dark'\r\n      appointmentStyle = 'primary'\r\n    } else {\r\n      patientsStyle = 'primary'\r\n      appointmentStyle = 'dark'\r\n    }\r\n    return (\r\n      <div style={{\r\n        display: 'block',\r\n        backgroundColor: 'white',\r\n        textAlign: 'center',\r\n        padding: 10\r\n      }}>\r\n        <Button variant={patientsStyle} onClick={() => this.setActiveList('patients')} style={{ marginRight: 5 }}>المحادثات</Button>\r\n        <Button variant={appointmentStyle} onClick={() => this.setActiveList('appointments')} >المواعيد</Button>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderCircle() {\r\n    return (\r\n      <div style={styles.circle} onClick={() => this.closeWindows()}>\r\n        X\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderUpperTabs() {\r\n    const {chat, profile, educators} = this.state.lang.ar;\r\n    return (\r\n      <div >\r\n        <Tabs defaultActiveKey=\"chat\" id=\"noanim-tab-example\" mountOnEnter >\r\n          <Tab eventKey=\"chat\" title={chat}>\r\n            {this.renderChat()}\r\n          </Tab>\r\n          <Tab eventKey=\"profile\" title={profile}>\r\n            <PatientProfile />\r\n          </Tab>\r\n          <Tab eventKey=\"educators\" title={educators} >\r\n            <PatientEducators />\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let { activeList  } = this.state\r\n    let { patientsVisible, appointmentsVisible, educatorsVisible , activeChat } = this.context\r\n\r\n    return (\r\n      <>\r\n        <MyNav />\r\n        <Container\r\n          fluid\r\n          style={styles.container}>\r\n          <CardContainer width=\"95%\" direction=\"row\" padding={10} marginT={10} marginB={10}>\r\n            <Tab.Container >\r\n              <div className=\"left-col\">\r\n                {this.renderListHeader()}\r\n                {activeList == 'appointments' ?\r\n                  <ListGroup >{this.renderAppointmentsList()}</ListGroup>\r\n                  : <ListGroup >{this.renderPatientsList()}</ListGroup>\r\n                }\r\n              </div>\r\n              <div className=\"right-col\">\r\n\r\n                <Tab.Content style={{ width: '100%', height: '100%', overflow: 'hidden' }}>\r\n                  {this.renderCircle()}\r\n                  {activeList == 'appointments' && appointmentsVisible ?\r\n                    this.renderAppointments()\r\n                    : activeChat ?\r\n                      this.renderUpperTabs()\r\n                      : null\r\n                  }\r\n                </Tab.Content>\r\n              </div>\r\n            </Tab.Container>\r\n          </CardContainer>\r\n        </Container>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ShowPatientsView;\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#0a122a\"\r\n  },\r\n  circle: {\r\n    width: 30,\r\n    height: 30,\r\n    borderWidth: 0,\r\n    textAlign: 'center',\r\n    borderStyle: 'solid',\r\n    borderColor: '#000',\r\n    color: '#000',\r\n    borderRadius: 80,\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    right: 20,\r\n    top: 20,\r\n    boxShadow: \"0px 2px 5px 4px rgba(0,0,0,0.1)\"\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {DataProvider} from './stateManagement/context'\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport LoginView from './views/LoginView'\r\nimport ShowPatientsView from './views/ShowPatientsView'\r\n\r\nfunction App() {\r\n  return (\r\n    <DataProvider>\r\n      <Router>\r\n       \r\n\r\n     \r\n      \r\n        <Switch>\r\n        <Route exact path=\"/\" component={LoginView} />\r\n        {/* <Redirect from=\"/educator-webapp\" exact to=\"/\" /> */}\r\n        {/* <Route exact path=\"/\" component={ShowPatientsView} /> */}\r\n        <Route exact path=\"/showpatients\" component={ShowPatientsView} />\r\n        </Switch>\r\n      </Router>\r\n   \r\n    </DataProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/ithnain.287167eb.png\";"],"sourceRoot":""}